AWSTemplateFormatVersion: 2010-09-09
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Network Configuration"
        Parameters:
          - VPC
          - Subnet
          - SelectedSubnetAutoAssignsPublicIp
          - SecurityGroups
      -
        Label:
          default: "EC2 Configuration"
        Parameters:
          - CoordinatorInstanceType
          - WorkersInstanceType
          - KeyName
          - WorkersCount
          - HACoordinatorsCount
          - WorkerMountVolume
          - WorkerVolumeType
          - WorkerVolumeSize
          - WorkerVolumeIOPS
          - KeepCoordinatorNode
      -
        Label:
          default: "Presto Configuration"
        Parameters:
          - AdditionalCoordinatorConfigurationURI
          - AdditionalWorkersConfigurationURI
          - BootstrapScriptURI
          - PrestoHttpPort
          - LicenseURI
      -
        Label:
          default: "Hive Connector Options"
        Parameters:
          - MetastoreType
          - ExternalMetastoreHost
          - ExternalMetastorePort
          - ExternalRdbmsMetastoreUserName
          - ExternalRdbmsMetastorePassword
          - ExternalRdbmsMetastoreDatabaseName
      -
        Label:
          default: "Ranger Options"
        Parameters:
          - EnableRanger
          - RangerAdminPassword
          - RangerBackendType
          - ExternalRdbmsRangerHost
          - ExternalRdbmsRangerPort
          - ExternalRdbmsRangerDatabaseName
          - ExternalRdbmsRangerUserName
          - ExternalRdbmsRangerPassword
          - RangerConfigFile
          - RangerBootstrapScript
      -
        Label:
          default: "Ranger LDAP User Synchronization"
        Parameters:
          - EnableRangerUserSync
          - RangerUserSyncConfigFile
      -
        Label:
          default: "Advanced AWS S3 Configuration"
        Parameters:
          - S3Endpoint
          - S3AccessKey
          - S3SecretKey
      - Label:
          default: "Monitoring"
        Parameters:
          - EnableCloudWatchMetrics
      - Label:
          default: "Advanced Configuration"
        Parameters:
          - IamInstanceProfile

Mappings:
  RegionMap:
    # AMI-IDS-BEGIN
    ap-northeast-1: { id: ami-096807e5bb0af13e2 }
    ap-northeast-2: { id: ami-0c52d28e290b0ced3 }
    ap-south-1: { id: ami-0ba84877bc89d3c03 }
    me-south-1: { id: ami-02b5a8c00a544a0d2 }
    eu-north-1: { id: ami-0a2fa16db88f377b1 }
    ap-southeast-1: { id: ami-0e665c3f2f0e3e80a }
    ap-southeast-2: { id: ami-04ba5678055d1d9b0 }
    ca-central-1: { id: ami-0929f166f49aa3b25 }
    eu-central-1: { id: ami-0f73b9760fc5ee632 }
    eu-west-1: { id: ami-04e640d1f1abd43ae }
    eu-west-2: { id: ami-04db52ab6b132ab9d }
    eu-west-3: { id: ami-0b26323d7e9013c1c }
    sa-east-1: { id: ami-0494826c32dd0addd }
    ap-east-1: { id: ami-0d9d47b66e0f0548b }
    us-east-1: { id: ami-0696964c49d82d675 }
    us-east-2: { id: ami-05bac273535713ab2 }
    us-west-1: { id: ami-04cce3967d1834d71 }
    us-west-2: { id: ami-075f86efb89f9c2c2 }
    # AMI-IDS-END
Parameters:
  VPC:
    Type: 'AWS::EC2::VPC::Id'
    #aws-permission @cft ec2:DescribeVpcs
    Description: VPC ID
    AllowedPattern: ".+"
  Subnet:
    Type: 'AWS::EC2::Subnet::Id'
    #aws-permission @cft ec2:DescribeSubnets
    Description: Subnet to use for Presto nodes (must belong to the selected VPC)
    AllowedPattern: ".+"
  SecurityGroups:
    Type: 'List<AWS::EC2::SecurityGroup::Id>'
    #aws-permission @cft ec2:DescribeSecurityGroups
    Description: 'Security Groups for Presto nodes (e.g: allowing SSH access). Must select at least one.'
    AllowedPattern: ".+"
  SelectedSubnetAutoAssignsPublicIp:
    Type: String
    Description: >
      Set to no when selected subnet doesn't auto assign public IPs for the created instances.
      Dedicated VPC Endpoints are created for Presto when subnet does not provide public IPs.
    AllowedValues:
      - "no"
      - "yes"
    Default: "yes"
  CoordinatorInstanceType:
    Type: String
    Default: r4.8xlarge
    AllowedValues:
      - m5.large     #    8.0 GiB    2 vCPUs  EBS only  Up to 10 Gigabit (test purposes)
      - m5.2xlarge   #   32.0 GiB    8 vCPUs  EBS only  Up to 10 Gigabit
      - m5.4xlarge   #   64.0 GiB   16 vCPUs  EBS only  Up to 10 Gigabit
      - m5.8xlarge   #   128.0 GiB  32 vCPUs  EBS only        10 Gigabit
      - m5.12xlarge  #  192.0 GiB   48 vCPUs  EBS only        10 Gigabit
      - m5a.large    #    8.0 GiB    2 vCPUs  EBS only  Up to 10 Gigabit (test purposes)
      - m5a.2xlarge  #   32.0 GiB    8 vCPUs  EBS only  Up to 10 Gigabit
      - m5a.4xlarge  #   64.0 GiB   16 vCPUs  EBS only  Up to 10 Gigabit
      - m5a.8xlarge  #   128.0 GiB  32 vCPUs  EBS only  Up to 10 Gigabit
      - m5a.12xlarge #  192.0 GiB   48 vCPUs  EBS only        10 Gigabit
      - r4.xlarge    #   30.5 GiB    4 vCPUs  EBS only  Up to 10 Gigabit (test purposes)
      - r4.2xlarge   #   61.0 GiB    8 vCPUs  EBS only  Up to 10 Gigabit (test purposes)
      - r4.4xlarge   #  122.0 GiB   16 vCPUs  EBS only  Up to 10 Gigabit
      - r4.8xlarge   #  244.0 GiB   32 vCPUs  EBS only        10 Gigabit
      - r5.xlarge    #   32.0 GiB    4 vCPUs  EBS only  Up to 10 Gigabit (test purposes)
      - r5.2xlarge   #   64.0 GiB    8 vCPUs  EBS only  Up to 10 Gigabit (test purposes)
      - r5.4xlarge   #  128.0 GiB   16 vCPUs  EBS only  Up to 10 Gigabit
      - r5.8xlarge   #  256.0 GiB   32 vCPUs  EBS only        10 Gigabit
      - r5.12xlarge  #  384.0 GiB   48 vCPUs  EBS only        10 Gigabit
      - r5a.xlarge   #   32.0 GiB    4 vCPUs  EBS only  Up to 10 Gigabit (test purposes)
      - r5a.2xlarge  #   64.0 GiB    8 vCPUs  EBS only  Up to 10 Gigabit (test purposes)
      - r5a.4xlarge  #  128.0 GiB   16 vCPUs  EBS only  Up to 10 Gigabit
      - r5a.8xlarge  #  256.0 GiB   32 vCPUs  EBS only  Up to 10 Gigabit
      - r5a.12xlarge #  384.0 GiB   48 vCPUs  EBS only        10 Gigabit
      - c5.9xlarge   #   72.0 GiB   36 vCPUs  EBS only        10 Gigabit
      - c5.18xlarge  #  144.0 GiB   72 vCPUs  EBS only        25 Gigabit
    Description: EC2 instance type of the coordinator
  WorkersInstanceType:
    Type: String
    Default: r4.8xlarge
    AllowedValues:
      - m5.large     #    8.0 GiB    2 vCPUs  EBS only  Up to 10 Gigabit (test purposes)
      - m5.2xlarge   #   32.0 GiB    8 vCPUs  EBS only  Up to 10 Gigabit
      - m5.4xlarge   #   64.0 GiB   16 vCPUs  EBS only  Up to 10 Gigabit
      - m5.8xlarge   #   128.0 GiB  32 vCPUs  EBS only        10 Gigabit
      - m5.12xlarge  #  192.0 GiB   48 vCPUs  EBS only        10 Gigabit
      - m5a.large    #    8.0 GiB    2 vCPUs  EBS only  Up to 10 Gigabit (test purposes)
      - m5a.2xlarge  #   32.0 GiB    8 vCPUs  EBS only  Up to 10 Gigabit
      - m5a.4xlarge  #   64.0 GiB   16 vCPUs  EBS only  Up to 10 Gigabit
      - m5a.8xlarge  #   128.0 GiB  32 vCPUs  EBS only  Up to 10 Gigabit
      - m5a.12xlarge #  192.0 GiB   48 vCPUs  EBS only        10 Gigabit
      - r4.xlarge    #   30.5 GiB    4 vCPUs  EBS only  Up to 10 Gigabit (test purposes)
      - r4.2xlarge   #   61.0 GiB    8 vCPUs  EBS only  Up to 10 Gigabit (test purposes)
      - r4.4xlarge   #  122.0 GiB   16 vCPUs  EBS only  Up to 10 Gigabit
      - r4.8xlarge   #  244.0 GiB   32 vCPUs  EBS only        10 Gigabit
      - r5.xlarge    #   32.0 GiB    4 vCPUs  EBS only  Up to 10 Gigabit (test purposes)
      - r5.2xlarge   #   64.0 GiB    8 vCPUs  EBS only  Up to 10 Gigabit (test purposes)
      - r5.4xlarge   #  128.0 GiB   16 vCPUs  EBS only  Up to 10 Gigabit
      - r5.8xlarge   #  256.0 GiB   32 vCPUs  EBS only        10 Gigabit
      - r5.12xlarge  #  384.0 GiB   48 vCPUs  EBS only        10 Gigabit
      - r5a.xlarge   #   32.0 GiB    4 vCPUs  EBS only  Up to 10 Gigabit (test purposes)
      - r5a.2xlarge  #   64.0 GiB    8 vCPUs  EBS only  Up to 10 Gigabit (test purposes)
      - r5a.4xlarge  #  128.0 GiB   16 vCPUs  EBS only  Up to 10 Gigabit
      - r5a.8xlarge  #  256.0 GiB   32 vCPUs  EBS only  Up to 10 Gigabit
      - r5a.12xlarge #  384.0 GiB   48 vCPUs  EBS only        10 Gigabit
      - c5.9xlarge   #   72.0 GiB   36 vCPUs  EBS only        10 Gigabit
      - c5.18xlarge  #  144.0 GiB   72 vCPUs  EBS only        25 Gigabit
    Description: EC2 instance type of the workers
  KeyName:
    Description: Name of an EC2 KeyPair to enable SSH access to the instance.
    Type: 'AWS::EC2::KeyPair::KeyName'
    #aws-permission @cft ec2:DescribeKeyPairs
    AllowedPattern: ".+"
  IamInstanceProfile:
    Description: >
      (Optional) The name of an instance profile to attach to Presto nodes.
      This profile needs to have permissions to access SQS and AutoScaling services for graceful node auto-scaling,
      access to IAM and S3 services for the Presto Hive connector and Glue for Glue catalog access. It must also
      have permission to manage CloudWatch log groups and streams.
      If not provided, Cloud Formation will create an IAM profile on the Stack with minimal necessary permissions.
    Type: String
    Default: ""
  WorkersCount:
    Description: Number of dedicated Presto worker nodes (apart from coordinator) to instantiate.
    Type: Number
    MinValue: 1
  HACoordinatorsCount:
    Description: >
      Number of Presto coordinator nodes to instantiate. If more then one, then Presto Coordinator will offer HA capabilities.
      Refer to the Starburst documentation for more details.
    Type: Number
    Default: 1
    MinValue: 1
  WorkerMountVolume:
    Description: >
      Create a /data directory on all nodes and mount an additional EBS volume
      there on the workers for Hive object caching.
    Type: String
    AllowedValues:
    - "no"
    - "yes"
    Default: "no"
  WorkerVolumeType:
    Description: >
      EBS volume type for the additional volume.
    Type: String
    AllowedValues:
      - "gp2"
      - "io1"
    Default: "gp2"
  WorkerVolumeSize:
    Description: >
      Size of the additional volume in GiB. Use at least 10 GiB for the io1
      volume type.
    Type: Number
    MinValue: 4
    MaxValue: 16384
    Default: 4
  WorkerVolumeIOPS:
    Description: >
      Number of I/O operations per second for the additional volume. Used only
      with io1 volume type. Provide a value between 100 and 20000. Each 5000
      I/O ops require at least 100 GiB of storage on the volume.
    Type: Number
    MinValue: 100
    MaxValue: 20000
    Default: 100
  KeepCoordinatorNode:
    Description: >
      (Debug only) Keep coordinator node running after Presto Coordinator service fails.
    Type: String
    AllowedValues:
      - "no"
      - "yes"
    Default: "no"

  LaunchSuperset:
    Description: >
      When enabled, Superset will be started on a an EC2 instance. Superset is a modern,
      enterprise-ready business intelligence web application. Learn more at https://superset.apache.org/
    Type: String
    AllowedValues:
      - "no"
      - "yes"
    Default: "no"
  AdditionalCoordinatorConfigurationURI:
    Type: String
    Description: '(Optional) URI of S3 zip file with additional Presto Coordinator configuration (e.g: s3://bucket/path)'
    AllowedPattern: 's3:\/\/[^\/"]+\/[^"]+|^$'
    Default: ""
  AdditionalWorkersConfigurationURI:
    Type: String
    Description: '(Optional) URI of S3 zip file with additional Presto Worker configuration (e.g: s3://bucket/path)'
    AllowedPattern: 's3:\/\/[^\/"]+\/[^"]+|^$'
    Default: ""
  BootstrapScriptURI:
    Type: String
    Description: '(Optional) URI of S3 bootstrap script file that will be run after Presto is configured on nodes'
    AllowedPattern: 's3:\/\/[^\/"]+\/[^"]+|^$'
    Default: ""
  PrestoHttpPort:
    Type: Number
    Description: 'Presto HTTP port'
    Default: 8080
  LicenseURI:
    Type: String
    Description: '(Optional) URI of S3 Enterprise License file'
    AllowedPattern: 's3:\/\/[^\/"]+\/[^"]+|^$'
    Default: ""
  MetastoreType:
    Type: String
    #aws-permission @node s3:GetObject
    #aws-permission @node s3:ListBucket
    #aws-permission @node s3:PutObject
    #aws-permission @node glue:BatchGetPartition
    #aws-permission @node glue:BatchCreatePartition
    #aws-permission @node glue:CreateDatabase
    #aws-permission @node glue:CreateTable
    #aws-permission @node glue:DeleteDatabase
    #aws-permission @node glue:DeletePartition
    #aws-permission @node glue:DeleteTable
    #aws-permission @node glue:GetDatabase
    #aws-permission @node glue:GetDatabases
    #aws-permission @node glue:GetPartition
    #aws-permission @node glue:GetPartitions
    #aws-permission @node glue:GetTable
    #aws-permission @node glue:GetTables
    #aws-permission @node glue:UpdateTable
    #aws-permission @node glue:UpdatePartition
    Description: The type of Metastore to use for the Hive Connector
    AllowedValues:
      - None
      - Standalone (ephemeral)
      - AWS Glue Data Catalog
      - External MySQL RDBMS
      - External PostgreSQL RDBMS
      - External Hive Metastore Service
    Default: "None"
  ExternalMetastoreHost:
    Type: String
    Description: The Hostname or IP address of the external Metastore resource.
    Default: ""
  ExternalMetastorePort:
    Type: Number
    Description: The port of the external Metastore resource (if 0 is used then default port for metastore type will be used)
    MinValue: 0
    Default: 0
  ExternalRdbmsMetastoreUserName:
    Type: String
    Description: The user name when using an external RDBMS Metastore resource.
    Default: ""
  ExternalRdbmsMetastorePassword:
    Type: String
    Description: The password when using an external RDBMS Metastore resource.
    NoEcho: 'true'
    Default: ""
  ExternalRdbmsMetastoreDatabaseName:
    Type: String
    Description: The database name when using an external RDBMS Metastore resource.
    Default: ""
  EnableRanger:
    Type: String
    Description: >
      When enabled, a Apache Ranger service is launched. It is configured to
      support the Presto system level security. Disabled by default. All other
      settings in this sections are ignored if option is disabled.
    AllowedValues:
      - "no"
      - "yes"
    Default: "no"
  RangerAdminPassword:
    Type: String
    Description: >
      Administrator password for Ranger. At least 8 characters, including
      lowercase, uppercase and digit, are required. When reusing an existing
      external database for Ranger in your CFT stack, you need to provide the
      same password as the initial one, to ensure access remains functional.

    AllowedPattern: '.{8,}|^$'
    NoEcho: 'true'
    Default: ""
  RangerBackendType:
    Type: String
    Description: >
      Type of database backend used for Apache Ranger. External PostgreSQL
      RDBMS is recommended for production usage, built-in PostgreSQL RDBMS is
      ephemeral and only suitable for demo purposes.
    AllowedValues:
      - Built-in PostgreSQL RDBMS
      - External PostgreSQL RDBMS
    Default: "Built-in PostgreSQL RDBMS"
  ExternalRdbmsRangerHost:
    Type: String
    Description: Hostname of the external PostgreSQL RDBMS server.
    Default: ""
  ExternalRdbmsRangerPort:
    Type: Number
    Description: Port of the external PostgreSQL RDBMS server.
    Default: 5432
    MinValue: 1
  ExternalRdbmsRangerDatabaseName:
    Type: String
    Description: >
      Name of the database on the external PostgreSQL RDBMS server to use as
      Ranger database backend. Database must already exist.
    Default: "ranger"
  ExternalRdbmsRangerUserName:
    Type: String
    Description: >
      Name of the database user that Ranger uses to manage the database on the
      external PostgreSQL RDBMS. The user must exist, have full permissions to
      the database and must have CREATEROLE permissions granted. An additional
      user 'ranger' is created for non-admin database access. If you specify
      'ranger', the single user is used for all operations.
    Default: "rangeradmin"
  ExternalRdbmsRangerPassword:
    Type: String
    Description: Password for the database user.
    NoEcho: 'true'
    Default: ""
  RangerConfigFile:
    Type: String
    Description: >
      URL to an optional additional Ranger config file in an S3 bucket. A
      template is available at https://starburstdata-cft-public.s3.us-east-2.amazonaws.com/1.0.0/ranger.template.properties.
      Modify the template and upload it to an S3 bucket. The config file is
      required for using Solr Audit with Ranger and other customizations.
      Example: s3://my-bucket/my-config_file.properties
    AllowedPattern: 's3:\/\/[^\/"]+\/[^"]+|^$'
    Default: ""
  RangerBootstrapScript:
    Type: String
    Description: >
      URL to an optional bootstrap script in an S3 bucket. The script is run
      before Ranger starts. It can, for example, be used to provide your
      truststore files.
      Example: s3://my-bucket/ranger-bootstrap.sh
    AllowedPattern: 's3:\/\/[^\/"]+\/[^"]+|^$'
    Default: ""
  EnableRangerUserSync:
    Type: String
    Description: >
      When enabled Apache Ranger syncs users from an external LDAP directory.
      Requires Ranger to be enabled, disabled by default.
      All other settings in this sections are ignored if Ranger user sync is
      disabled.
    AllowedValues:
      - "no"
      - "yes"
    Default: "no"
  RangerUserSyncConfigFile:
    Type: String
    Description: >
      URL to a Ranger user synchronization configuration file in an S3 bucket,
      A template is available at https://starburstdata-cft-public.s3.us-east-2.amazonaws.com/1.0.0/usersync.template.properties.
      Create a modified copy of the template and upload it to an S3 bucket.
      Required if Ranger usersync is enabled.
      Examples: s3://my-bucket/my-config_file.properties
    AllowedPattern: 's3:\/\/[^\/"]+\/[^"]+|^$'
    Default: ""
  S3Endpoint:
    Type: String
    Description: (Optional) The S3-compatible storage endpoint server.
    Default: ""
  S3AccessKey:
    Type: String
    Description: (Optional) The S3-compatible access key.
    Default: ""
  S3SecretKey:
    Type: String
    Description: (Optional) The S3-compatible secret key.
    Default: ""
  EnableCloudWatchMetrics:
    Description: >
      When enabled, metrics will be collected for Presto nodes and stored in CloudWatch
      (additional CloudWatch fees are charged). Additionally, a cluster CloudWatch Dashboard
      will also be created.
    Type: String
    AllowedValues:
      - "no"
      - "yes"
    Default: "no"
Conditions:

  LaunchSuperset: !Equals [!Ref LaunchSuperset, 'yes']
  LaunchSupersetAndSelectedSubnetAutoAssignsPublicIp: !And
    - !Equals [!Ref LaunchSuperset, 'yes']
    - !Equals [!Ref SelectedSubnetAutoAssignsPublicIp, 'yes']
  LaunchMetastore: !Or
    - !Equals [!Ref MetastoreType, 'Standalone (ephemeral)']
    - !Equals [!Ref MetastoreType, 'External MySQL RDBMS']
    - !Equals [!Ref MetastoreType, 'External PostgreSQL RDBMS']
  ExternalRdbmsMetastoreDefined: !Or
    - !Equals [!Ref MetastoreType, 'External MySQL RDBMS']
    - !Equals [!Ref MetastoreType, 'External PostgreSQL RDBMS']
  LaunchMetastoreDb: !Equals [!Ref MetastoreType, 'Standalone (ephemeral)']
  ExternalMetastorePortDefined: !Not [!Equals [!Ref ExternalMetastorePort, '0']]
  UseExternalHiveMetastore: !Equals [!Ref MetastoreType, 'External Hive Metastore Service']
  UseGlueMetastore: !Equals [!Ref MetastoreType, 'AWS Glue Data Catalog']
  UseExternalMysqlMetastore: !Equals [!Ref MetastoreType, 'External MySQL RDBMS']
  UseExternalPostgresMetastore: !Equals [!Ref MetastoreType, 'External PostgreSQL RDBMS']
  LaunchRanger: !Equals [!Ref EnableRanger, 'yes']
  LaunchRangerAndSelectedSubnetAutoAssignsPublicIp: !And
    - !Equals [!Ref EnableRanger, 'yes']
    - !Equals [!Ref SelectedSubnetAutoAssignsPublicIp, 'yes']
  UseExternalRdbmsRanger: !Equals [!Ref RangerBackendType, 'External PostgreSQL RDBMS']
  LaunchRangerUserSync: !And
    - !Equals [!Ref EnableRanger, 'yes']
    - !Equals [!Ref EnableRangerUserSync, 'yes']
  CreateIamInstanceProfile: !Equals [!Ref IamInstanceProfile, '']
  CreateVPCEndpoints: !Equals [!Ref SelectedSubnetAutoAssignsPublicIp, 'no']
  S3EndpointDefined: !Not [!Equals [!Ref S3Endpoint, '']]
  EnableCloudWatchMetrics: !Equals [!Ref EnableCloudWatchMetrics, 'yes']
  EnableWorkerVolume: !Equals [!Ref WorkerMountVolume, 'yes' ]
Resources:
  # Permissions needed but not tied to a specific resource on the Stack:
  #aws-permission @cft iam:PassRole
  #aws-permission @cft cloudformation:CreateStack
  #aws-permission @cft cloudformation:DeleteStack
  #aws-permission @cft cloudformation:DescribeStackEvents
  #aws-permission @cft cloudformation:DescribeStacks
  PrestoPlacementGroup:
    Type: 'AWS::EC2::PlacementGroup'
    #aws-permission @cft ec2:CreatePlacementGroup
    #aws-permission @cft ec2:DeletePlacementGroup
    #aws-permission @cft ec2:DescribePlacementGroups
  # allow "PrestoHttpPort" TCP communication between the nodes
  PrestoSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    #aws-permission @cft ec2:CreateSecurityGroup
    #aws-permission @cft ec2:DeleteSecurityGroup
    Properties:
      GroupDescription: Presto nodes security group
      VpcId: !Ref VPC
  EndpointSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    #aws-permission @cft ec2:CreateSecurityGroup
    #aws-permission @cft ec2:DeleteSecurityGroup
    Condition: CreateVPCEndpoints
    Properties:
      GroupDescription: Endpoint security group
      VpcId: !Ref VPC
  PrestoOutboundRule:
    Type: AWS::EC2::SecurityGroupEgress
    #aws-permission @cft ec2:AuthorizeSecurityGroupEgress
    #aws-permission @cft ec2:RevokeSecurityGroupEgress
    Properties:
      IpProtocol: tcp
      FromPort: !Ref PrestoHttpPort
      ToPort: !Ref PrestoHttpPort
      DestinationSecurityGroupId: !GetAtt PrestoSecurityGroup.GroupId
      GroupId: !GetAtt PrestoSecurityGroup.GroupId
  PrestoInboundRule:
    Type: AWS::EC2::SecurityGroupIngress
    #aws-permission @cft ec2:AuthorizeSecurityGroupIngress
    #aws-permission @cft ec2:RevokeSecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: !Ref PrestoHttpPort
      ToPort: !Ref PrestoHttpPort
      SourceSecurityGroupId: !GetAtt PrestoSecurityGroup.GroupId
      GroupId: !GetAtt PrestoSecurityGroup.GroupId
  MetastorePrestoOutboundRule:
    Type: AWS::EC2::SecurityGroupEgress
    #aws-permission @cft ec2:AuthorizeSecurityGroupEgress
    #aws-permission @cft ec2:RevokeSecurityGroupEgress
    Condition: LaunchMetastore
    Properties:
      IpProtocol: tcp
      FromPort: 9083
      ToPort: 9083
      DestinationSecurityGroupId: !GetAtt PrestoSecurityGroup.GroupId
      GroupId: !GetAtt PrestoSecurityGroup.GroupId
  MetastorePrestoInboundRule:
    Type: AWS::EC2::SecurityGroupIngress
    #aws-permission @cft ec2:AuthorizeSecurityGroupIngress
    #aws-permission @cft ec2:RevokeSecurityGroupIngress
    Condition: LaunchMetastore
    Properties:
      IpProtocol: tcp
      FromPort: 9083
      ToPort: 9083
      SourceSecurityGroupId: !GetAtt PrestoSecurityGroup.GroupId
      GroupId: !GetAtt PrestoSecurityGroup.GroupId
  RangerPrestoInboundRule:
    Type: AWS::EC2::SecurityGroupIngress
    #aws-permission @cft ec2:AuthorizeSecurityGroupIngress
    #aws-permission @cft ec2:RevokeSecurityGroupIngress
    Condition: LaunchRanger
    Properties:
      IpProtocol: tcp
      FromPort: 6080
      ToPort: 6080
      SourceSecurityGroupId: !GetAtt PrestoSecurityGroup.GroupId
      GroupId: !GetAtt PrestoSecurityGroup.GroupId
  PrestoRubixBKOutboundRule:
      Type: AWS::EC2::SecurityGroupEgress
      #aws-permission @cft ec2:AuthorizeSecurityGroupEgress
      #aws-permission @cft ec2:RevokeSecurityGroupEgress
      Properties:
        IpProtocol: tcp
        FromPort: 8899
        ToPort: 8899
        DestinationSecurityGroupId: !GetAtt PrestoSecurityGroup.GroupId
        GroupId: !GetAtt PrestoSecurityGroup.GroupId
  PrestoRubixBKInboundRule:
      Type: AWS::EC2::SecurityGroupIngress
      #aws-permission @cft ec2:AuthorizeSecurityGroupIngress
      #aws-permission @cft ec2:RevokeSecurityGroupIngress
      Properties:
        IpProtocol: tcp
        FromPort: 8899
        ToPort: 8899
        SourceSecurityGroupId: !GetAtt PrestoSecurityGroup.GroupId
        GroupId: !GetAtt PrestoSecurityGroup.GroupId
  PrestoRubixLDTOutboundRule:
      Type: AWS::EC2::SecurityGroupEgress
      #aws-permission @cft ec2:AuthorizeSecurityGroupEgress
      #aws-permission @cft ec2:RevokeSecurityGroupEgress
      Properties:
        IpProtocol: tcp
        FromPort: 8898
        ToPort: 8898
        DestinationSecurityGroupId: !GetAtt PrestoSecurityGroup.GroupId
        GroupId: !GetAtt PrestoSecurityGroup.GroupId
  PrestoRubixLDTInboundRule:
      Type: AWS::EC2::SecurityGroupIngress
      #aws-permission @cft ec2:AuthorizeSecurityGroupIngress
      #aws-permission @cft ec2:RevokeSecurityGroupIngress
      Properties:
        IpProtocol: tcp
        FromPort: 8898
        ToPort: 8898
        SourceSecurityGroupId: !GetAtt PrestoSecurityGroup.GroupId
        GroupId: !GetAtt PrestoSecurityGroup.GroupId
  EndpointOutboundRule:
    Type: AWS::EC2::SecurityGroupEgress
    #aws-permission @cft ec2:AuthorizeSecurityGroupEgress
    #aws-permission @cft ec2:RevokeSecurityGroupEgress
    Condition: CreateVPCEndpoints
    Properties:
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      DestinationSecurityGroupId: !GetAtt EndpointSecurityGroup.GroupId
      GroupId: !GetAtt PrestoSecurityGroup.GroupId
  EndpointInboundRule:
    Type: AWS::EC2::SecurityGroupIngress
    #aws-permission @cft ec2:AuthorizeSecurityGroupIngress
    #aws-permission @cft ec2:RevokeSecurityGroupIngress
    Condition: CreateVPCEndpoints
    Properties:
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      SourceSecurityGroupId: !GetAtt PrestoSecurityGroup.GroupId
      GroupId: !GetAtt EndpointSecurityGroup.GroupId
  OnStackCreateLambda:
    Type: 'AWS::Lambda::Function'
    #aws-permission @cft lambda:CreateFunction
    #aws-permission @cft lambda:DeleteFunction
    #aws-permission @cft lambda:AddPermission
    #aws-permission @cft lambda:RemovePermission
    #aws-permission @cft lambda:PutFunctionConcurrency
    Properties:
      Handler: 'index.handle_on_stack_create'
      Role: !GetAtt PrestoMonitoringLambdaIAMRole.Arn
      Code:
        ZipFile: |
          import cfnresponse
          # LAMBDA-ON-STACK-CREATE-BEGIN
          import zlib, base64
          exec(zlib.decompress(base64.b64decode('eJzNVcFu4zYQvfsrWF0ooaqQdm8GtMDWcRZBt9nFOtk9BIbAUCOFqEyqJNUkMPzvnaEk27HdNOmpF1vSzLx5nDecUavWWM/ujDfvJqp/aUxdK12Pr7LSFlxrtIPxk1er3bMVEu6E/GNSWbMKSNJYyKTRlarZ4DULb5MBOqvBf8JHsHGSOXyGv6CJR+P5/Nebj8kJ3yjQjE6EXF5dfE4msjFdWTwIL+/z4JrJRoH2MQ+WYOBpTyzvGcUWvFXg8jVficdCeA+r1js+/eVskwQO7gCKPr0NpISK3QtdNlAYXTiPtSqkBeEhxkNoT2AeHn0ynTAv6gIzFLU1XRsPhjS43fKv4ExnJXyxpgXrMSNf3vIFAV6JFfBlMmFYGgJwBXLCIGX0iILGsVxKVyauIoxEFF2zB+XvWUgyZevwv8ki9FcV26b+swPnr59aTPNDzmeBP0fGz0GjK8OEpLTMYoiyUAak/S5C+XT5/OjpvnlxM5vNF4t0vUkO4asIa9A1nq1PBGzw8Bp7GcvBvGGzi4xhpSRASfGBBRals3oyyiEaYVekiB+lsR7L/lyVff1eFUAy2icqTbAXdFsKB2guXU4vGf3ExIfa5UEovzUrbLEX1f5dPH7HgEXvHyRnD/eqAaYN3lVjLJ5WeGMHrrUF0D0kEWOkKaUvC9P5+Jhgekipj3qLfhcfLj/Nz9N1dC68iKbRNaVjmI4RLvVbZSxOhC1V9oGokmakDguUsyiov9MfrDU4Av4bGCNON1/nzKlai2Zsyl1DHPXZMaJyjLqZfe/zDghBT9cAtPHPZ/+bRodHCa1n8/CHl3H/nsL4EZNsHbCHQPddTjUNQ4oN7X2qeimiFMQ0v7YdvPHcBw2y3SAZSrkSvkDsONn0F+9fO3pEzfemf1aCk1bdDRfWxUFBmpEuv33xem0d+XLZD0C6VmMOvH406WXwQv+j8VdFfa/w9WuzbHjIUJlOl/szil2IBhfuafj+eL2ybP1P7G7PlhtCHABfcAtLxMM30XRIKc/55994qP6bJ8WQa2/KvT+O/PEwss91cvX161JjrQieNlv23BGfPtIDlTMforKtOUSmGEHLmZjcddb5Evtuqkraj5WSItTRmgb3GW+xTN5M+y1/EDHYAqWfCJhPd/SGfn1h/478287vrEVrGiWfXnWMbdClPhdPLn93liaTvwEaioZT')))
          # Created by pyminifier (https://github.com/liftoff/pyminifier)
          # LAMBDA-ON-STACK-CREATE-END
      Runtime: 'python3.6'
      Timeout: 900 # max available
      ReservedConcurrentExecutions: 1
  OnStackStartupCoordinatorAvailableCheckHook:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt OnStackCreateLambda.Arn
      #aws-permission @cft lambda:InvokeFunction
      #aws-permission @cft lambda:GetFunctionConfiguration
      AlarmName: !Ref CooordinatorDownAlarm
      StackName: !Sub '${AWS::StackName}'
      MaxWaitSeconds: 830 # AWS has a 15 minute hard limit for Lambdas, we need to finish before that happens
  PrestoClusterIAMRole:
    Type: AWS::IAM::Role
    #aws-permission @cft iam:CreateRole
    #aws-permission @cft iam:DeleteRole
    Condition: CreateIamInstanceProfile
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com, apigateway.amazonaws.com]
            Action: ['sts:AssumeRole']
      Policies:
        #aws-permission @cft iam:AttachRolePolicy
        #aws-permission @cft iam:DeleteRolePolicy
        #aws-permission @cft iam:DetachRolePolicy
        #aws-permission @cft iam:PutRolePolicy
        - PolicyName: presto-cf
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "autoscaling:CompleteLifecycleAction"
                  - "autoscaling:RecordLifecycleActionHeartbeat"
                  - "cloudformation:SignalResource"
                  - "ec2:DescribeInstances"
                  - "glue:BatchGetPartition"
                  - "glue:BatchCreatePartition"
                  - "glue:CreateDatabase"
                  - "glue:CreateTable"
                  - "glue:DeleteDatabase"
                  - "glue:DeletePartition"
                  - "glue:DeleteTable"
                  - "glue:GetDatabase"
                  - "glue:GetDatabases"
                  - "glue:GetPartition"
                  - "glue:GetPartitions"
                  - "glue:GetTable"
                  - "glue:GetTables"
                  - "glue:UpdateTable"
                  - "glue:UpdatePartition"
                  - "s3:GetObject"
                  - "s3:ListBucket"
                  - "s3:PutObject"
                  - "sqs:ChangeMessageVisibility"
                  - "sqs:DeleteMessage"
                  - "sqs:GetQueueUrl"
                  - "sqs:ReceiveMessage"
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:PutRetentionPolicy"
                  - "logs:DescribeLogGroups"
                  - "logs:DescribeLogStreams"
                  - "cloudwatch:PutMetricData"
                Resource:
                  - "*"
  PrestoMonitoringLambdaIAMRole:
    Type: AWS::IAM::Role
    #aws-permission @cft iam:CreateRole
    #aws-permission @cft iam:DeleteRole
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: ['sts:AssumeRole']
      Policies:
        #aws-permission @cft iam:AttachRolePolicy
        #aws-permission @cft iam:DeleteRolePolicy
        #aws-permission @cft iam:DetachRolePolicy
        #aws-permission @cft iam:PutRolePolicy
        - PolicyName: presto-cf-lambda
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "cloudformation:SignalResource"
                  - "ec2:DescribeInstances"
                  - "ec2:TerminateInstances"
                  - "ec2:CreateTags"
                  - "ec2:DeleteTags"
                  - "ec2:AttachNetworkInterface"
                  - "ec2:DetachNetworkInterface"
                  - "ec2:DescribeNetworkInterfaceAttribute"
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "logs:PutRetentionPolicy"
                  - "logs:TagLogGroup"
                  - "cloudwatch:PutMetricData"
                  - "cloudwatch:DescribeAlarms"
                Resource:
                  - "*"
  PrestoClusterInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    #aws-permission @cft iam:CreateInstanceProfile
    #aws-permission @cft iam:DeleteInstanceProfile
    #aws-permission @cft iam:GetRole
    #aws-permission @cft iam:AddRoleToInstanceProfile
    #aws-permission @cft iam:RemoveRoleFromInstanceProfile
    Condition: CreateIamInstanceProfile
    Properties:
      Roles:
        - Ref: PrestoClusterIAMRole
  MonitoringEndpoint:
   Type: AWS::EC2::VPCEndpoint
    #aws-permission @cft ec2:CreateVpcEndpoint
    #aws-permission @cft ec2:DeleteVpcEndpoints
    #aws-permission @cft ec2:DescribeVpcEndpoints
   Condition: CreateVPCEndpoints
   Properties:
     VpcEndpointType: "Interface"
     ServiceName: !Sub 'com.amazonaws.${AWS::Region}.monitoring'
     PrivateDnsEnabled: false
     VpcId: !Ref VPC
     SecurityGroupIds:
       - !Ref EndpointSecurityGroup
     SubnetIds:
       - !Ref Subnet
  APIProxyEndpoint:
    Type: AWS::EC2::VPCEndpoint
    #aws-permission @cft ec2:CreateVpcEndpoint
    #aws-permission @cft ec2:DeleteVpcEndpoints
    #aws-permission @cft ec2:DescribeVpcEndpoints
    Condition: CreateVPCEndpoints
    Properties:
      VpcEndpointType: "Interface"
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.execute-api'
      PrivateDnsEnabled: false
      VpcId: !Ref VPC
      SecurityGroupIds:
        - !Ref EndpointSecurityGroup
      SubnetIds:
        - !Ref Subnet
  AWSProxyRestAPI:
    Type: AWS::ApiGateway::RestApi
    #aws-permission @cft apigateway:DELETE
    #aws-permission @cft apigateway:GET
    #aws-permission @cft apigateway:PUT
    #aws-permission @cft apigateway:UpdateRestApiPolicy
    Condition: CreateVPCEndpoints
    Properties:
      EndpointConfiguration:
        Types:
          - "PRIVATE"
      Policy: !Sub |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": "*",
              "Action": "execute-api:Invoke",
              "Resource": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*"
            },
            {
              "Effect": "Deny",
              "Principal": "*",
              "Action": "execute-api:Invoke",
              "Resource": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:*/*",
              "Condition": {
                "StringNotEquals": {
                  "aws:SourceVpce": "${APIProxyEndpoint}"
                }
              }
            }
          ]
        }
      Name: !Sub "${AWS::StackName}-presto-aws-proxy"
      Description: "Presto AWS Proxy API"
  CFTProxyResource:
    Type: AWS::ApiGateway::Resource
    #aws-permission @cft apigateway:POST
    Condition: CreateVPCEndpoints
    Properties:
      ParentId: !GetAtt AWSProxyRestAPI.RootResourceId
      PathPart: "cloudformation-proxy"
      RestApiId: !Ref AWSProxyRestAPI
  CFTProxyMethod:
    Type: "AWS::ApiGateway::Method"
    #aws-permission @cft apigateway:POST
    Condition: CreateVPCEndpoints
    Properties:
      AuthorizationType: "NONE"
      HttpMethod: "POST"
      MethodResponses:
        - StatusCode: '200'
      Integration:
        IntegrationHttpMethod: "POST"
        Type: "AWS"
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:cloudformation:path//"
        Credentials: !If [CreateIamInstanceProfile, !GetAtt PrestoClusterIAMRole.Arn, !Sub "arn:aws:iam::${AWS::AccountId}:role/${IamInstanceProfile}"]
        RequestParameters:
          integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
        IntegrationResponses:
          - StatusCode: '200'
      RestApiId: !Ref AWSProxyRestAPI
      ResourceId: !Ref CFTProxyResource
  EC2ProxyResource:
    Type: AWS::ApiGateway::Resource
    #aws-permission @cft apigateway:POST
    Condition: CreateVPCEndpoints
    Properties:
      ParentId: !GetAtt AWSProxyRestAPI.RootResourceId
      PathPart: "ec2-proxy"
      RestApiId: !Ref AWSProxyRestAPI
  EC2ProxyMethod:
    Type: "AWS::ApiGateway::Method"
    #aws-permission @cft apigateway:POST
    Condition: CreateVPCEndpoints
    Properties:
      AuthorizationType: "NONE"
      HttpMethod: "POST"
      MethodResponses:
        - StatusCode: '200'
      Integration:
        IntegrationHttpMethod: "POST"
        Type: "AWS"
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:ec2:path//"
        Credentials: !If [CreateIamInstanceProfile, !GetAtt PrestoClusterIAMRole.Arn, !Sub "arn:aws:iam::${AWS::AccountId}:role/${IamInstanceProfile}"]
        RequestParameters:
          integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
        IntegrationResponses:
          - StatusCode: '200'
      RestApiId: !Ref AWSProxyRestAPI
      ResourceId: !Ref EC2ProxyResource
  SQSProxyResource:
    Type: AWS::ApiGateway::Resource
    #aws-permission @cft apigateway:POST
    Condition: CreateVPCEndpoints
    Properties:
      ParentId: !GetAtt AWSProxyRestAPI.RootResourceId
      PathPart: "sqs-proxy"
      RestApiId: !Ref AWSProxyRestAPI
  SQSProxyMethod:
    Type: "AWS::ApiGateway::Method"
    #aws-permission @cft apigateway:POST
    Condition: CreateVPCEndpoints
    Properties:
      AuthorizationType: "NONE"
      HttpMethod: "POST"
      MethodResponses:
        - StatusCode: '200'
      Integration:
        IntegrationHttpMethod: "POST"
        Type: "AWS"
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:sqs:path//"
        Credentials: !If [CreateIamInstanceProfile, !GetAtt PrestoClusterIAMRole.Arn, !Sub "arn:aws:iam::${AWS::AccountId}:role/${IamInstanceProfile}"]
        RequestParameters:
          integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
        IntegrationResponses:
          - StatusCode: '200'
      RestApiId: !Ref AWSProxyRestAPI
      ResourceId: !Ref SQSProxyResource
  AutoscalingProxyResource:
    Type: AWS::ApiGateway::Resource
    #aws-permission @cft apigateway:POST
    Condition: CreateVPCEndpoints
    Properties:
      ParentId: !GetAtt AWSProxyRestAPI.RootResourceId
      PathPart: "autoscaling-proxy"
      RestApiId: !Ref AWSProxyRestAPI
  AutoscalingProxyMethod:
    Type: "AWS::ApiGateway::Method"
    #aws-permission @cft apigateway:POST
    Condition: CreateVPCEndpoints
    Properties:
      AuthorizationType: "NONE"
      HttpMethod: "POST"
      MethodResponses:
        - StatusCode: '200'
      Integration:
        IntegrationHttpMethod: "POST"
        Type: "AWS"
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:autoscaling:path//"
        Credentials: !If [CreateIamInstanceProfile, !GetAtt PrestoClusterIAMRole.Arn, !Sub "arn:aws:iam::${AWS::AccountId}:role/${IamInstanceProfile}"]
        RequestParameters:
          integration.request.header.Content-Type: "'application/x-www-form-urlencoded'"
        IntegrationResponses:
          - StatusCode: '200'
      RestApiId: !Ref AWSProxyRestAPI
      ResourceId: !Ref AutoscalingProxyResource
  GlueProxyResource:
    Type: AWS::ApiGateway::Resource
    #aws-permission @cft apigateway:POST
    Condition: CreateVPCEndpoints
    Properties:
      ParentId: !GetAtt AWSProxyRestAPI.RootResourceId
      PathPart: "glue-proxy"
      RestApiId: !Ref AWSProxyRestAPI
  GlueProxyMethod:
    Type: "AWS::ApiGateway::Method"
    #aws-permission @cft apigateway:POST
    Condition: CreateVPCEndpoints
    Properties:
      AuthorizationType: "NONE"
      HttpMethod: "POST"
      RequestParameters:
        "method.request.header.X-Starburst-Amz-Target-Proxy": true
      MethodResponses:
        - StatusCode: '200'
        - StatusCode: '400'
        - StatusCode: '500'
      Integration:
        IntegrationHttpMethod: "POST"
        Type: "AWS"
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:glue:path//"
        Credentials: !If [CreateIamInstanceProfile, !GetAtt PrestoClusterIAMRole.Arn, !Sub "arn:aws:iam::${AWS::AccountId}:role/${IamInstanceProfile}"]
        RequestParameters:
          integration.request.header.Content-Type: "'application/x-amz-json-1.1'"
          integration.request.header.X-Amz-Target: "method.request.header.X-Starburst-Amz-Target-Proxy"
        IntegrationResponses:
          - StatusCode: '200'
            SelectionPattern: "2\\d{2}"
          - StatusCode: '400'
            SelectionPattern: "4\\d{2}"
          - StatusCode: '500'
            SelectionPattern: "5\\d{2}"
      RestApiId: !Ref AWSProxyRestAPI
      ResourceId: !Ref GlueProxyResource
  AWSProxyDeployment:
    DependsOn:
      - SQSProxyMethod
      - AutoscalingProxyMethod
      - CFTProxyMethod
      - EC2ProxyMethod
      - GlueProxyMethod
    Condition: CreateVPCEndpoints
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !Ref AWSProxyRestAPI
      Description: !Sub "${AWS::StackName}-presto-aws-proxy-deployment"
      StageName: "aws-proxy"
  LogsEndpoint:
    Type: AWS::EC2::VPCEndpoint
    #aws-permission @cft ec2:CreateVpcEndpoint
    #aws-permission @cft ec2:DeleteVpcEndpoints
    #aws-permission @cft ec2:DescribeVpcEndpoints
    Condition: CreateVPCEndpoints
    Properties:
      VpcEndpointType: "Interface"
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.logs'
      PrivateDnsEnabled: false
      VpcId: !Ref VPC
      SecurityGroupIds:
        - !Ref EndpointSecurityGroup
      SubnetIds:
        - !Ref Subnet
  CoordinatorENI:
    Type: 'AWS::EC2::NetworkInterface'
    DependsOn: PrestoPlacementGroup
    #aws-permission @cft ec2:CreateNetworkInterface
    #aws-permission @cft ec2:DescribeNetworkInterfaces
    #aws-permission @cft ec2:ModifyNetworkInterfaceAttribute
    #aws-permission @cft ec2:DeleteNetworkInterface
    Properties:
      Description: !Sub "${AWS::StackName} coordinator ENI"
      GroupSet: !Split
        - ','
        - !Join
          - ','
          - - !GetAtt PrestoSecurityGroup.GroupId
            - !Join
              - ','
              - !Ref SecurityGroups
      SubnetId: !Ref Subnet
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName} Coordinator ENI" }
        - { Key: "starburstdata:identification:role", Value: "presto:coordinator-eni" }
  Coordinator:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    #aws-permission @cft autoscaling:CreateLaunchConfiguration
    #aws-permission @cft autoscaling:DeleteLaunchConfiguration
    #aws-permission @cft autoscaling:DescribeLaunchConfigurations
    Properties:
      InstanceType: !Ref CoordinatorInstanceType
      ImageId: !FindInMap
        - RegionMap
        - !Ref 'AWS::Region'
        - id
      KeyName: !Ref KeyName
      #aws-permission @cft iam:GetInstanceProfile
      IamInstanceProfile: !If [CreateIamInstanceProfile, !Ref PrestoClusterInstanceProfile, !Ref IamInstanceProfile]
      SecurityGroups: !Split
        - ','
        - !Join
          - ','
          - - !GetAtt PrestoSecurityGroup.GroupId
            - !Join
              - ','
              - !Ref SecurityGroups
      UserData: !Base64
        "Fn::Sub":
          - |-
            {
              "cft_configure": {
                "coordinator": true
                , "worker": false
                , "coordinator_address": "${CoordinatorENI.PrimaryPrivateIpAddress}"
                , "presto_http_port": ${PrestoHttpPort}
                , "additional_configuration_uri": "${AdditionalCoordinatorConfigurationURI}"
                , "bootstrap_script_uri": "${BootstrapScriptURI}"
                , "license_uri": "${LicenseURI}"
                , "graceful_shutdown_queue": "${GracefulNodeShutdownQueue.QueueName}"
                , "region": "${AWS::Region}"
                , "cf_stack": "${AWS::StackName}"
                , "cf_resource": "Coordinators"
                , "log_group": "${PrestoLogGroup}"
                , "usage_metrics_log_group": "${UsageMetricsLogGroup}"
                , "cloudwatch_metrics": "${EnableCloudWatchMetrics}"
                , "heartbeat_interval_seconds": "2"
                , "keep_coordinator_node": "${KeepCoordinatorNode}"
                ${HiveMetastore}
                ${Ranger}
                ${PrivateSubnetEndpoints}
                ${S3}
              }
            }
          - PrestoLogGroup: !Sub "/starburstdata/presto/${AWS::StackName}"
            UsageMetricsLogGroup: !Sub "/starburstdata/usage-metrics/${AWS::StackName}"
            PrivateSubnetEndpoints: !If
            - CreateVPCEndpoints
            - !Sub
              - |-
                , "api_proxy_endpoint_dns_entries": "${APIProxyDnsEntries}"
                , "aws_proxy_api_id": "${AWSProxyRestAPI}"
                , "aws_proxy_deployment": "${AWSProxyDeployment}"
                , "logs_endpoint_dns_entries": "${LogsDnsEntries}"
                , "monitoring_endpoint_dns_entries": "${MonitoringDnsEntries}"
              - APIProxyDnsEntries: !Join [ ',', !GetAtt APIProxyEndpoint.DnsEntries ]
                LogsDnsEntries: !Join [ ',', !GetAtt LogsEndpoint.DnsEntries ]
                MonitoringDnsEntries: !Join [ ',', !GetAtt MonitoringEndpoint.DnsEntries ]
            - ''
            HiveMetastore: !If
            - LaunchMetastore
            - !Sub |
               , "hive_metastore_uri": "thrift://${Metastore.PrivateIp}:9083"
            - !If
              - UseExternalHiveMetastore
              - !Sub
                - |-
                  , "hive_metastore_uri": "thrift://${ExternalMetastoreHost}:${Port}"
                - Port: !If
                  - ExternalMetastorePortDefined
                  - !Ref ExternalMetastorePort
                  - '9083'
              - !If
                - UseGlueMetastore
                - |-
                  , "hive_use_glue_metastore": true
                - ''
            Ranger: !If
              - LaunchRanger
              - !Sub |
                , "ranger.policy-rest-url": "http://${Ranger.PrivateDnsName}:6080"
                , "ranger.ranger-admin-password": "${RangerAdminPassword}"
              - ''
            S3:  !If
            - S3EndpointDefined
            - !Sub |
               , "s3_endpoint": "${S3Endpoint}"
               , "s3_access_key": "${S3AccessKey}"
               , "s3_secret_key": "${S3SecretKey}"
            - ''

  Coordinators:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    #aws-permission @cft autoscaling:CreateAutoScalingGroup
    #aws-permission @cft autoscaling:DeleteAutoScalingGroup
    #aws-permission @cft autoscaling:DescribeAutoScalingGroups
    #aws-permission @cft autoscaling:UpdateAutoScalingGroup
    #aws-permission @cft autoscaling:DescribeScalingActivities
    #aws-permission @cft autoscaling:DescribeLaunchConfigurations
    #aws-permission @cft autoscaling:DescribeAutoScalingInstances
    #aws-permission @cft autoscaling:EnableMetricsCollection
    #aws-permission @cft autoscaling:DisableMetricsCollection
    #aws-permission @cft ec2:CreateTags
    #aws-permission @cft ec2:RunInstances
    #aws-permission @cft ec2:TerminateInstances
    #aws-permission @cft ec2:DescribeInstances
    UpdatePolicy:
      # Make updates to LaunchConfiguration cause rolling update of coordinators
      AutoScalingReplacingUpdate:
        WillReplace: true
    CreationPolicy:
      ResourceSignal:
        Timeout: PT20M
        Count: !Ref HACoordinatorsCount
    Properties:
      LaunchConfigurationName: !Ref Coordinator
      VPCZoneIdentifier:
        - !Ref Subnet
      MetricsCollection:
        - Granularity: "1Minute"
      MinSize: !Ref HACoordinatorsCount
      MaxSize: !Ref HACoordinatorsCount
      DesiredCapacity: !Ref HACoordinatorsCount
      PlacementGroup: !Ref PrestoPlacementGroup
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}-Presto Coordinator", PropagateAtLaunch: true }
        - { Key: "starburstdata:identification:role", Value: "presto:coordinator", PropagateAtLaunch: true }
  GracefulNodeShutdownQueue:
    Type: 'AWS::SQS::Queue'
    #aws-permission @cft sqs:CreateQueue
    #aws-permission @cft sqs:DeleteQueue
    #aws-permission @cft sqs:GetQueueAttributes
    #aws-permission @cft sqs:TagQueue
    Properties:
      # This is required so that threads that handle those messages will not try to process the same message over and over again
      # The value is higher than the usual graceful shutdown, so that in most cases there will not be a need to request
      # more time. Otherwise if the handling thread is reaching 250s it will tell SQS to keep his message private for longer.
      # See AWS docs on VisibilityTimeout for more details.
      VisibilityTimeout: 250
  Worker:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    #aws-permission @cft autoscaling:CreateLaunchConfiguration
    #aws-permission @cft autoscaling:DeleteLaunchConfiguration
    #aws-permission @cft autoscaling:DescribeLaunchConfigurations
    #aws-permission @cft autoscaling:UpdateAutoScalingGroup
    Properties:
      InstanceType: !Ref WorkersInstanceType
      ImageId: !FindInMap
        - RegionMap
        - !Ref 'AWS::Region'
        - id
      KeyName: !Ref KeyName
      BlockDeviceMappings:
        - DeviceName: "/dev/xvda"
          # Default volume size would be 8 GB which left less than 2.4 GB for runtime. With 16 GB volume we have 4x more space for Presto.
          # TODO separate volume for Presto (work dir, temp dir, spill) and OS. Presto volume to be configurable.
          Ebs: { VolumeType: "gp2", VolumeSize: 16 }
        - !If
          - EnableWorkerVolume
          - DeviceName: "/dev/xvdb"
            Ebs: { VolumeType: !Ref WorkerVolumeType, VolumeSize: !Ref WorkerVolumeSize, Iops: !Ref WorkerVolumeIOPS }
          - !Ref AWS::NoValue
      #aws-permission @cft iam:GetInstanceProfile
      IamInstanceProfile: !If [CreateIamInstanceProfile, !GetAtt PrestoClusterInstanceProfile.Arn, !Ref IamInstanceProfile]

      SecurityGroups: !Split
        - ','
        - !Join
          - ','
          - - !GetAtt PrestoSecurityGroup.GroupId
            - !Join
              - ','
              - !Ref SecurityGroups
      # When worker has private IP only, following things are problematic:
      #  - S3 cannot be accessed (can be fixed with NAT box in VPC or "VPC endpoint for S3")
      #  - EC2 boot is very long, as it includes `yum upgrade` which retries timeouts (can
      #    be fixed with NAT box in VPC or "repo_upgrade: none" in cloud init)
      #AssociatePublicIpAddress: false
      UserData: !Base64
        "Fn::Sub":
          - |-
            {
              "cft_configure": {
                "coordinator": false
                , "worker": true
                , "coordinator_address": "${CoordinatorENI.PrimaryPrivateIpAddress}"
                , "presto_http_port": ${PrestoHttpPort}
                , "additional_configuration_uri": "${AdditionalWorkersConfigurationURI}"
                , "bootstrap_script_uri": "${BootstrapScriptURI}"
                , "license_uri": "${LicenseURI}"
                , "region": "${AWS::Region}"
                , "cf_stack": "${AWS::StackName}"
                , "cf_resource": "Workers"
                , "log_group": "${PrestoLogGroup}"
                , "usage_metrics_log_group": "${UsageMetricsLogGroup}"
                , "cloudwatch_metrics": "${EnableCloudWatchMetrics}"
                ${PrivateSubnetEndpoints}
                ${HiveMetastore}
                ${S3}
                ${WorkerVolume}
              }
            }
          - PrestoLogGroup: !Sub "/starburstdata/presto/${AWS::StackName}"
            UsageMetricsLogGroup: !Sub "/starburstdata/usage-metrics/${AWS::StackName}"
            HiveMetastore:  !If
            - LaunchMetastore
            - !Sub |
               , "hive_metastore_uri": "thrift://${Metastore.PrivateIp}:9083"
            - !If
              - UseExternalHiveMetastore
              - !Sub
                - |-
                  , "hive_metastore_uri": "thrift://${ExternalMetastoreHost}:${Port}"
                - Port: !If
                  - ExternalMetastorePortDefined
                  - !Ref ExternalMetastorePort
                  - '9083'
              - !If
                - UseGlueMetastore
                - |-
                  , "hive_use_glue_metastore": true
                - ''
            PrivateSubnetEndpoints: !If
            - CreateVPCEndpoints
            - !Sub
              - |-
                , "api_proxy_endpoint_dns_entries": "${APIProxyDnsEntries}"
                , "aws_proxy_api_id": "${AWSProxyRestAPI}"
                , "aws_proxy_deployment": "${AWSProxyDeployment}"
                , "logs_endpoint_dns_entries": "${LogsDnsEntries}"
                , "monitoring_endpoint_dns_entries": "${MonitoringDnsEntries}"
              - APIProxyDnsEntries: !Join [ ',', !GetAtt APIProxyEndpoint.DnsEntries ]
                LogsDnsEntries: !Join [ ',', !GetAtt LogsEndpoint.DnsEntries ]
                MonitoringDnsEntries: !Join [ ',', !GetAtt MonitoringEndpoint.DnsEntries ]
            - ''
            S3:  !If
            - S3EndpointDefined
            - !Sub |
               , "s3_endpoint": "${S3Endpoint}"
               , "s3_access_key": "${S3AccessKey}"
               , "s3_secret_key": "${S3SecretKey}"
            - ''
            WorkerVolume: !If
            - EnableWorkerVolume
            - |-
              , "worker_volume": "/dev/xvdb"
            - ''
  PrestoAutoScalingIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [autoscaling.amazonaws.com]
            Action: ['sts:AssumeRole']
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AutoScalingNotificationAccessRole
  Workers:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    #aws-permission @cft autoscaling:CreateAutoScalingGroup
    #aws-permission @cft autoscaling:DeleteAutoScalingGroup
    #aws-permission @cft autoscaling:DescribeAutoScalingGroups
    #aws-permission @cft autoscaling:UpdateAutoScalingGroup
    #aws-permission @cft autoscaling:DescribeScalingActivities
    #aws-permission @cft autoscaling:DescribeLaunchConfigurations
    #aws-permission @cft autoscaling:DescribeAutoScalingInstances
    #aws-permission @cft autoscaling:EnableMetricsCollection
    #aws-permission @cft autoscaling:DisableMetricsCollection
    #aws-permission @cft ec2:CreateTags
    #aws-permission @cft ec2:RunInstances
    #aws-permission @cft ec2:TerminateInstances
    #aws-permission @cft ec2:DescribeInstances
    UpdatePolicy:
      # Make updates to LaunchConfiguration cause rolling update of workers
      AutoScalingReplacingUpdate:
        WillReplace: true
    CreationPolicy:
      ResourceSignal:
        Timeout: PT20M
        Count: !Ref WorkersCount
    Properties:
      LaunchConfigurationName: !Ref Worker
      VPCZoneIdentifier:
        - !Ref Subnet
      MetricsCollection:
        - Granularity: "1Minute"
      MinSize: !Ref WorkersCount
      MaxSize: !Ref WorkersCount
      DesiredCapacity: !Ref WorkersCount
      PlacementGroup: !Ref PrestoPlacementGroup
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}-Presto Worker", PropagateAtLaunch: true }
        - { Key: "starburstdata:identification:role", Value: "presto:worker", PropagateAtLaunch: true }
  GracefulPrestoNodeShutdownHook:
    Type: "AWS::AutoScaling::LifecycleHook"
    #aws-permission @cft autoscaling:PutLifecycleHook
    #aws-permission @cft autoscaling:DeleteLifecycleHook
    Properties:
      AutoScalingGroupName: !Ref Workers
      LifecycleTransition: 'autoscaling:EC2_INSTANCE_TERMINATING'
      NotificationTargetARN: !GetAtt GracefulNodeShutdownQueue.Arn
      RoleARN: !GetAtt PrestoAutoScalingIAMRole.Arn
  CoordinatorHeartbeatZeroSignal:
    Type: 'AWS::Lambda::Function'
    #aws-permission @cft lambda:CreateFunction
    #aws-permission @cft lambda:DeleteFunction
    #aws-permission @cft lambda:PutFunctionConcurrency
    Properties:
      Handler: 'index.coordinator_zero_signal_loop'
      Role: !GetAtt PrestoMonitoringLambdaIAMRole.Arn
      Code:
        ZipFile: |
          # LAMBDA-COORDINATOR-ZERO-SIGNAL-BEGIN
          import zlib, base64
          exec(zlib.decompress(base64.b64decode('eJyVVdtu2zgQfddXCAYWlLqqoDRvBlQgsN2ugcQJ7KQtNigIWhopbChSS1K5NMi/d0hJzgVJN33ikDNz5nZI8qZV2oZbZdV+wPuNUHXNZT1ulRklyxsIKq0ab18oDWmhZMXrcDCY+V0wAKQ12EMUQUdxalCGKxDRqFyuPh3HL5hORuzJnzrt/7GHL+EKZIlrmWr4rwNjTdqy4pLVYNJOC8G3+65KCYXlSrZKiZfCfD1Yr5arz3FwcHKyPv5GF98Ws7PT5fGKzs/WB1442uQfsiwooQoLpXTJJbNK05+gFTW8lkxQoVQbIa60CYa0cGPjaTDOI+WyUlE1OWTNtmShsUxbKMNrbi9C7zMN7/x6P4mD0LIa4Wpaa9W10YCWeP05KSqK7sUl+Y6WWIuzNFSDRS0WOZo7pQBoadlp5hTUAKpKk3NpI2VSkFdcK3lOjhan6+VsQ5er08X6y8Eh3Sxmx6v5xgd4pdp89nD+D2AxW2D2X9RvvLrvg6uEF5eg8ywIry+4gPDSZaQ7KbEnu8JeztN1L7T61i2vpZG23VZwc0EbsJoXEUYM4aaA1oYLvyCe9x/HAOMpzmJnMeQ2YKFZ2MOlkwTtqRtdfqo7cOgjUAnbro4mBmV07e1xGtKmboAhr4bS/9rL8jx7koOnwmSDzHWhiCuHDAim9+5d/873vNxA6jsUvdInz8qXKeOJQiVrYOCiyf1lSwvBMdeIuCMS96r0KQZKn52wQu98AEx3ag+aoIfJ74ij87bTxpbMsikvHRMrXvg0p1oJIFPSaryeauoDJs88Bp3P9r0DJtOHzO/7An/D9DeU1nb2wZG2SvDi9k0V7pyWcs5uTb6fJXFQCGZM+D9XQG1/4LPjknPpU6QRt5RGBkSV9C+vZ7jbp5T2J3m/PDoWqivpNbPFxbPyvMYryACX9y94pB2VwM2lYTeUWQtNaw2Zfsju47jP5tm1ccGeJPMQ1XeuN6NuVpFrlsFHFnJy4sdGkiOvnqM2P78j/W7lp0h2jcGZz5HJ0mArMRe0Gyx6kI0btz9JyBcmOseAx415/OzdJ993RlmaJeQMO4tIM9VJF2eDA8EfYA1Gic6Njkz30Ken0RseINcJ7GGnZTiSAr8epE/DuHOj7kriOGnD8YcxUfz+qf+7vSzLPv7uLwl+AXLtx4o=')))
          # Created by pyminifier (https://github.com/liftoff/pyminifier)
          # LAMBDA-COORDINATOR-ZERO-SIGNAL-END
      Runtime: 'python3.6'
      Timeout: 60
      Environment:
        Variables:
          METRICS_INTERVAL_SECONDS: '2'
  CoordinatorHeartbeatZeroSignalTriggerRule:
    Type: AWS::Events::Rule
    #aws-permission @cft events:PutRule
    #aws-permission @cft events:DeleteRule
    #aws-permission @cft events:DescribeRule
    #aws-permission @cft events:PutTargets
    #aws-permission @cft events:RemoveTargets
    DependsOn: Coordinators
    Properties:
      ScheduleExpression: rate(1 minute)
      State: ENABLED
      Targets:
        -
          Arn: !GetAtt CoordinatorHeartbeatZeroSignal.Arn
          Id: 'CoordinatorHeartbeatZeroSignalLambda'
          Input: !Sub |
            {
              "cf_stack": "${AWS::StackName}"
            }
  PermissionForEventsToInvokeCoordinatorHeartbeatZeroSignalLambda:
    Type: AWS::Lambda::Permission
    #aws-permission @cft lambda:AddPermission
    #aws-permission @cft lambda:RemovePermission
    Properties:
      FunctionName:
        Ref: CoordinatorHeartbeatZeroSignal
      Action: 'lambda:InvokeFunction'
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt CoordinatorHeartbeatZeroSignalTriggerRule.Arn
  CooordinatorDownAlarm:
    Type: AWS::CloudWatch::Alarm
    #aws-permission @cft cloudwatch:PutMetricAlarm
    #aws-permission @cft cloudwatch:DeleteAlarms
    Properties:
      ActionsEnabled: False
      AlarmDescription: 'Alarm triggered in the event of a Presto Coordinator being down.'
      Dimensions:
        - Name: 'PrestoStackName'
          Value: !Sub '${AWS::StackName}'
      MetricName: 'Heartbeat'
      Namespace: 'Presto'
      EvaluationPeriods: 2
      Period: 10
      Statistic: Sum
      ComparisonOperator: LessThanThreshold
      Threshold: 1
      TreatMissingData: missing
      Unit: Count
  CoordinatorFailoverIfNecessary:
    Type: 'AWS::Lambda::Function'
    #aws-permission @cft lambda:CreateFunction
    #aws-permission @cft lambda:DeleteFunction
    #aws-permission @cft lambda:PutFunctionConcurrency
    Properties:
      Handler: 'index.coordinator_failover_if_necessary'
      Role: !GetAtt PrestoMonitoringLambdaIAMRole.Arn
      Code:
        ZipFile: |
          # LAMBDA-COORDINATOR-FAILOVER-BEGIN
          import zlib, base64
          exec(zlib.decompress(base64.b64decode('eJytWVtv47YSfvevIPIiuccV0t2HAxhVAddxtkazduB4twUMQ6AlymEjiy5JxckJ/N/PDCXqZjmXc/oSSxrOlTPfDBm+2wupSSK2W55uezx/Fco+ab5jvViKHYmoZvhGCop9H+Cf/4g0f4hYoqll3ggtPufc+BgKybxQpDHfWiFj89Yr1Htbpm/gkUm37yl4Zo8scS1xOrue9zuWXljZFx9l+vxhDuPCI0sj+I08yf7OmNLK29PwgW6Z8jKZJHzzGb1MWai5SPdCJF1q/hgtZtPZl35vdHu7mP8ZTP6cjL8tp/NZcPVtMTIPX+/8f19e9iIWk1AIGfGUaiGDmPJEPDIZ8DgAJUwpKp9dEJ7qAejV7En3hz27pR5PY+HGFzd0t4koUZpKzSJy4PqeGJ4heTG/x4t+j2i6DYAx2EqR7d1C2sDQV04YB8AePjhrWAkO4UoVSKaBCp7a5UhMGNsHUSYpEgLFgBQpn6faFcpj6SOXIl0516Ppzfz7ZBFMZ8vJ4vvoJribjOezqzujoe7zPfXH1etvo99oGiWwKcYyWHu45wkjD6hVZmkKfpfGd9uCESJaPuNPS5PXHWDQQthTyPaaTMwPSDPcNtDMfoVolysKy+7RXlhE9sJEiybEavEuBsAZ4Db5S5kx1IOV5BnD3TPmm6zo3i2zR0FKd6xIA+WbZPfChINu18FPTj8neU0Z8PQFH2bA7RcCvZJshA6AQ/kvDmbSJpNKAxDQIY/QrZiHxsyhFAlzhs5eQnmIoVE4aHEUNGPtjyjYGVaWH3MHX0myd7i2z3TFGOxFwsPnd3lYMk3TK/qs/M+Xg34vTKhSpDMLxeYvKHY0CY0OYC+5DgJXsSQe5Hhn0g1NDfJ3Pwc+FzRJzjCcO/oUUK3Zbq+VM/x0ecQ8QAleYHnyn9rnRGRRcKA6vG+FwVAMwSkM8GvKa5JZ+CnImVoSgPAG671QACQBIn/AoyCk4T2L/Bm8VmtoQuXOxNRvuLJyKoqzrjtaFSJLOcht852uqPOn7NCQsYfWI8zubyUN2Vkgmk3+CMbz+eJqOhst54sAEPnr3GDwl8VoPAluJ4vp/KqBTudUGoCFRPqYwrvlaLH8dnteHSZWNy6hHSa9eExSobtCmQdbUq5Y5Jq1BBIvk2mPNNvExQhXEq5IvtjDnkDCTEpIirrIcltOSQYowZYOEgpGEzFJjBU8tuYeqAoSmqWYRFC0IXAmz26HjNz8ltm1qiQgiVhJxEoiUKmoXWmeJISnxGwP2TPJReSRXyGyiM4i07nLtQC1jMxT6p8wsrTNivx/jCwsfADOToNOdzrHGhSohTWBUAL5XO+HuaZWktvdj3kaNRItBA84DoY2CVqM6F25+daeA5WmYbeTj2wyDelCtkJEdZNIqYXEIkshMl/4I/qR7Yu4lGEp7Cy8c1vW9C1en62VsragV+1FqioYq6DXi5gKJd+wnFW5xg1sL8pfneDgul9VqhW6cr5iGwgNo3LWzalCSqipuAiO83Ii8egYYXko6v6Ta5oo1itfz6lbXa5Xzp2GeH6nSQZ47PvO6Ga0+OqU8emo8jI00LQA+nfYQgrbYGY+QfJqlVuLQPW14fNpvUxmUwseOQ9r+Vr0HZ4C/qYha2So/RhsnqFfuJXSlTMtSNPIsTtjV3fmam7ZPGkkpKMqpjNbUZhXvNnVNr5dVprhofzGI5uGWVLGuWreVQ5aDuVWrkEe1gRZP3NZK2fBFJOPZmyDZEAI6qaYNLFCbZZWqfUODnjvtSKS+/9Gwpytwq4ApEwfhHyAQGgmY+zBIAkoGdT/yD75TiXeGcxylqnlmNamjva00T+tJzwjus6oEljiSndTK8bCZrPgjTNeUY8QMmdmRiQoyeJc45i4p+Lg2wO4By+uPYR7mQ7ridcQemNsWXKU+K/ytO7aIeUjE03/F9Daa0NN5fZpm/wn3I4BCuD4gb2xwbaEI0mRkSgSlqyc39mzETBV4xy+anhyxyEjc5GlCyaU+Mft/4jjmhFSIGL/548NmKcA3kAzxdhOERpq/shMl5uMPxm/XjG2jSxdgX+lH9dr6N0Qcs0TKAmAj5d8P4YOGDmkBzWkmRYqpDiPDLf2OAVHPBMvOL+szo/tqnbSctbr4+t4lJ/PrRuQowKvL9wS0ExKyIoFU6NbEi6ssD2tMzVQaj14YM9+kl+XWIahfWgWUd8mZTWSYGqW5naMgfHF+J6FDzivlOuG5KV8PhajHUQk4BArGH7ckthvpmz5vRtW7djTWXn/a9t+tWVfMSSib9iwzcWfaPbKoi12pR+ynsK3WwEr4HK9d9cJznpwLST0fXuD0jIMzTngVL1h5QCBc+/JvEuiTKL9KtsovN1LNSlSgT2xMMNsaQ+ZJ3N1LQSgonOgPvU/t6rD/6qP+w3Mq48uH2phgyv2yGFJGrEn/6dua0LJIK0CvOpxoYxEBrEFHDhvwHqAGIxIgbg7fAXICpDA2x7pGqCtgLffPw7WJ2eV+GLW2qSXs4Ycidsk3koORc6m+1EUQclDgR/7sLshHp/jLKkdv8zO5JVjjlGNCczUTMuqJZM7VGMOZc00r5DmpUKOtp0VpcvIc4miC61vznpNhetuaTABsI6NPiPj3ZuMqG5CaSGsHsfi2rU2a7/Z+At0w+rGa1joeafoE1/cPfD9HnfjXNAxpF13uF1XuG8K67i4bTRl9P8dN9IYkXJYy68jEYkl21GObAGWBmgJdpCUXMF00uT/4afLy8tfXvsvQu+/Dm1LKQ==')))
          # Created by pyminifier (https://github.com/liftoff/pyminifier)
          # LAMBDA-COORDINATOR-FAILOVER-END
      Runtime: 'python3.6'
      Timeout: 60
      ReservedConcurrentExecutions: 1
      Environment:
        Variables:
          FAILOVER_INTERVAL_SECONDS: '3'
          NEW_COORDINATOR_PROMOTION_GRACE_PERIOD_SECONDS: '60'
          NEW_COORDINATOR_STARTUP_GRACE_PERIOD_SECONDS: '500'
  CoordinatorFailoverIfNecessaryTriggerRule:
    Type: AWS::Events::Rule
    #aws-permission @cft events:PutRule
    #aws-permission @cft events:DeleteRule
    #aws-permission @cft events:DescribeRule
    #aws-permission @cft events:PutTargets
    #aws-permission @cft events:RemoveTargets
    DependsOn: CooordinatorDownAlarm
    Properties:
      ScheduleExpression: rate(1 minute)
      State: ENABLED
      Targets:
        -
          Arn: !GetAtt CoordinatorFailoverIfNecessary.Arn
          Id: 'CoordinatorFailoverIfNecessaryLambda'
          Input: !Sub |
            {
              "cf_stack": "${AWS::StackName}",
              "coordinator_eni_id": "${CoordinatorENI}",
              "coordinators_group_name": "${Coordinators}",
              "alarm_name": "${CooordinatorDownAlarm}"
            }
  PermissionForEventsToInvokeCoordinatorFailoverIfNecessaryLambda:
    Type: AWS::Lambda::Permission
    #aws-permission @cft lambda:AddPermission
    #aws-permission @cft lambda:RemovePermission
    Properties:
      FunctionName:
        Ref: CoordinatorFailoverIfNecessary
      Action: 'lambda:InvokeFunction'
      Principal: 'events.amazonaws.com'
      SourceArn: !GetAtt CoordinatorFailoverIfNecessaryTriggerRule.Arn
  Metastore:
    Type: 'AWS::EC2::Instance'
    #aws-permission @cft ec2:CreateTags
    #aws-permission @cft ec2:RunInstances
    #aws-permission @cft ec2:TerminateInstances
    #aws-permission @cft ec2:DescribeInstances
    Condition: LaunchMetastore
    CreationPolicy:
      ResourceSignal:
        Timeout: PT20M
        Count: 1
    Properties:
      InstanceType: m5.large
      ImageId: !FindInMap
        - RegionMap
        - !Ref 'AWS::Region'
        - id
      KeyName: !Ref KeyName
      #aws-permission @cft iam:GetInstanceProfile
      IamInstanceProfile: !If [CreateIamInstanceProfile, !Ref PrestoClusterInstanceProfile, !Ref IamInstanceProfile]
      SecurityGroupIds: !Split
        - ','
        - !Join
          - ','
          - - !GetAtt PrestoSecurityGroup.GroupId
            - !Join
              - ','
              - !Ref SecurityGroups
      #PlacementGroupName: not set
      SubnetId: !Ref Subnet
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}-Metastore" }
        - { Key: "starburstdata:identification:role", Value: "presto:metastore" }
      UserData: !Base64
        "Fn::Sub":
          - |-
            {
              "cft_configure": {
                "coordinator": false
                , "worker": false
                , "start_presto": false
                , "start_metastore": true
                , "bootstrap_script_uri": "${BootstrapScriptURI}"
                , "region": "${AWS::Region}"
                , "log_group": "${PrestoLogGroup}"
                , "usage_metrics_log_group": "${UsageMetricsLogGroup}"
                , "cf_stack": "${AWS::StackName}"
                , "cf_resource": "Metastore"
                ${PrivateSubnetEndpoints}
                ${StartMetastoreDb}
                ${MetastoreJdbcUrl}
                ${MetastoreJdbcUser}
                ${MetastoreJdbcPassword}
                ${S3}
              }
            }
          - PrestoLogGroup: !Sub "/starburstdata/presto/${AWS::StackName}"
            UsageMetricsLogGroup: !Sub "/starburstdata/usage-metrics/${AWS::StackName}"
            PrivateSubnetEndpoints: !If
            - CreateVPCEndpoints
            - !Sub
              - |-
                , "api_proxy_endpoint_dns_entries": "${APIProxyDnsEntries}"
                , "aws_proxy_api_id": "${AWSProxyRestAPI}"
                , "aws_proxy_deployment": "${AWSProxyDeployment}"
                , "logs_endpoint_dns_entries": "${LogsDnsEntries}"
                , "monitoring_endpoint_dns_entries": "${MonitoringDnsEntries}"
              - APIProxyDnsEntries: !Join [ ',', !GetAtt APIProxyEndpoint.DnsEntries ]
                LogsDnsEntries: !Join [ ',', !GetAtt LogsEndpoint.DnsEntries ]
                MonitoringDnsEntries: !Join [ ',', !GetAtt MonitoringEndpoint.DnsEntries ]
            - ''
            StartMetastoreDb: !If
            - LaunchMetastoreDb
            - ', "start_metastore_db": true'
            - ''
            MetastoreJdbcUrl: !If
            - UseExternalMysqlMetastore
            - !Sub
              - ', "metastore_jdbc_url": "jdbc:mysql://${ExternalMetastoreHost}:${Port}/${ExternalRdbmsMetastoreDatabaseName}"'
              - Port: !If
                - ExternalMetastorePortDefined
                - !Ref ExternalMetastorePort
                - '3306'
            - !If
              - UseExternalPostgresMetastore
              - !Sub
                - ', "metastore_jdbc_url": "jdbc:postgresql://${ExternalMetastoreHost}:${Port}/${ExternalRdbmsMetastoreDatabaseName}"'
                - Port: !If
                  - ExternalMetastorePortDefined
                  - !Ref ExternalMetastorePort
                  - '5432'
              - ''
            MetastoreJdbcUser: !If
            - ExternalRdbmsMetastoreDefined
            - !Sub ', "metastore_jdbc_user": "${ExternalRdbmsMetastoreUserName}"'
            - ''
            MetastoreJdbcPassword: !If
            - ExternalRdbmsMetastoreDefined
            - !Sub ', "metastore_jdbc_password": "${ExternalRdbmsMetastorePassword}"'
            - ''
            S3: !If
            - S3EndpointDefined
            - !Sub |
               , "s3_endpoint": "${S3Endpoint}"
               , "s3_access_key": "${S3AccessKey}"
               , "s3_secret_key": "${S3SecretKey}"
            - ''
  Ranger:
    Type: 'AWS::EC2::Instance'
    #aws-permission @cft ec2:CreateTags
    #aws-permission @cft ec2:RunInstances
    #aws-permission @cft ec2:TerminateInstances
    #aws-permission @cft ec2:DescribeInstances
    Condition: LaunchRanger
    CreationPolicy:
      ResourceSignal:
        Timeout: PT20M
        Count: 1
    Properties:
      InstanceType: m5.large
      ImageId: !FindInMap
        - RegionMap
        - !Ref 'AWS::Region'
        - id
      KeyName: !Ref KeyName
      #aws-permission @cft iam:GetInstanceProfile
      IamInstanceProfile: !If [CreateIamInstanceProfile, !Ref PrestoClusterInstanceProfile, !Ref IamInstanceProfile]
      SecurityGroupIds: !Split
        - ','
        - !Join
          - ','
          - - !GetAtt PrestoSecurityGroup.GroupId
            - !Join
              - ','
              - !Ref SecurityGroups
      #PlacementGroupName: not set
      SubnetId: !Ref Subnet
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}-Ranger" }
        - { Key: "starburstdata:identification:role", Value: "presto:ranger" }
      UserData: !Base64
        "Fn::Sub":
          - |-
            {
              "cft_configure": {
                "start_ranger": true
                , "coordinator": false
                , "worker": false
                , "start_presto": false
                , "region": "${AWS::Region}"
                , "log_group": "${PrestoLogGroup}"
                , "usage_metrics_log_group": "${UsageMetricsLogGroup}"
                , "cf_stack": "${AWS::StackName}"
                , "cf_resource": "Ranger"
                , "coordinator_address": "${CoordinatorENI.PrimaryPrivateIpAddress}"
                , "presto_http_port": ${PrestoHttpPort}
                ${PrivateSubnetEndpoints}
                ${RangerRdbms}
                ${RangerUserSync}
                , "RANGER__rangerAdmin_password": "${RangerAdminPassword}"
                , "ranger_additional_config": "${RangerConfigFile}"
                , "ranger_bootstrap_script": "${RangerBootstrapScript}"
              }
            }
          - PrestoLogGroup: !Sub "/starburstdata/presto/${AWS::StackName}"
            UsageMetricsLogGroup: !Sub "/starburstdata/usage-metrics/${AWS::StackName}"
            PrivateSubnetEndpoints: !If
              - CreateVPCEndpoints
              - !Sub
                - |-
                  , "api_proxy_endpoint_dns_entries": "${APIProxyDnsEntries}"
                  , "aws_proxy_api_id": "${AWSProxyRestAPI}"
                  , "aws_proxy_deployment": "${AWSProxyDeployment}"
                  , "logs_endpoint_dns_entries": "${LogsDnsEntries}"
                  , "monitoring_endpoint_dns_entries": "${MonitoringDnsEntries}"
                - APIProxyDnsEntries: !Join [ ',', !GetAtt APIProxyEndpoint.DnsEntries ]
                  LogsDnsEntries: !Join [ ',', !GetAtt LogsEndpoint.DnsEntries ]
                  MonitoringDnsEntries: !Join [ ',', !GetAtt MonitoringEndpoint.DnsEntries ]
              - ''
            RangerRdbms: !If
              - UseExternalRdbmsRanger
              - !Sub |
                , "RANGER__db_host": "${ExternalRdbmsRangerHost}:${ExternalRdbmsRangerPort}"
                , "RANGER__db_name": "${ExternalRdbmsRangerDatabaseName}"
                , "RANGER__db_root_user": "${ExternalRdbmsRangerUserName}"
                , "RANGER__db_root_password": "${ExternalRdbmsRangerPassword}"
              - |
                , "start_ranger_db": true
            RangerUserSync: !If
              - LaunchRangerUserSync
              - !Sub |
                , "start_ranger_usersync": true
                , "ranger__config_file_url": "${RangerUserSyncConfigFile}"
              - ''
  Dashboard:
    Type: 'AWS::CloudWatch::Dashboard'
    #aws-permission @cft cloudwatch:PutDashboard
    #aws-permission @cft cloudwatch:DeleteDashboards
    #aws-permission @cft cloudwatch:ListDashboards
    #aws-permission @cft cloudwatch:GetDashboard
    #aws-permission @cft cloudwatch:DescribeAlarms
    Condition: EnableCloudWatchMetrics
    Properties:
      DashboardName: !Sub "Starburst-Dashboard-${AWS::StackName}"
      DashboardBody: !Sub
        - |-
          {
              "widgets": [
                  {
                      "type": "metric",
                      "x": 0,
                      "y": 6,
                      "width": 9,
                      "height": 6,
                      "properties": {
                          "metrics": [
                              [ "Presto", "cpu_usage_softirq", "PrestoStackName", "${AWS::StackName}", "Type", "Node", "Category", "cpu", "PrestoNodeRole", "coordinator", { "label": "softirq", "period": 10, "color": "#9467bd" } ],
                              [ ".", "cpu_usage_iowait", ".", ".", ".", ".", ".", ".", ".", ".", { "label": "iowait", "period": 10, "color": "#ff7f0e" } ],
                              [ ".", "cpu_usage_system", ".", ".", ".", ".", ".", ".", ".", ".", { "label": "system", "period": 10, "color": "#d62728" } ],
                              [ ".", "cpu_usage_user", ".", ".", ".", ".", ".", ".", ".", ".", { "label": "user", "period": 10, "color": "#2ca02c" } ],
                              [ ".", "cpu_usage_idle", ".", ".", ".", ".", ".", ".", ".", ".", { "label": "idle", "period": 10, "color": "#1f77b4" } ]
                          ],
                          "view": "timeSeries",
                          "stacked": true,
                          "title": "Coordinator CPU",
                          "region": "${AWS::Region}",
                          "period": 300
                      }
                  },
                  {
                      "type": "metric",
                      "x": 0,
                      "y": 12,
                      "width": 6,
                      "height": 6,
                      "properties": {
                          "metrics": [
                              [ "Presto", "HeapMemoryUsage_used", "PrestoStackName", "${AWS::StackName}", "Type", "Presto", "Category", "memory", "PrestoNodeRole", "coordinator", { "label": "used", "period": 10, "color": "#d62728" } ],
                              [ ".", "HeapMemoryUsage_committed", ".", ".", ".", ".", ".", ".", ".", ".", { "label": "allocated", "period": 10 } ],
                              [ ".", "HeapMemoryUsage_max", ".", ".", ".", ".", ".", ".", ".", ".", { "label": "max", "period": 10 } ]
                          ],
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Coordinator heap memory",
                          "region": "${AWS::Region}",
                          "yAxis": {
                              "left": {
                                  "showUnits": false,
                                  "label": "Bytes"
                              }
                          },
                          "legend": {
                              "position": "bottom"
                          },
                          "period": 300
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 6,
                      "width": 9,
                      "height": 6,
                      "properties": {
                          "metrics": [
                              [ { "expression": "recv/PERIOD(recv)", "label": "received", "id": "e1", "period": 10 } ],
                              [ { "expression": "sent/PERIOD(sent)", "label": "sent", "id": "e2", "period": 10 } ],
                              [ "Presto", "net_bytes_recv", "PrestoStackName", "${AWS::StackName}", "Type", "Node", "Category", "net", "PrestoNodeRole", "coordinator", { "period": 10, "stat": "Sum", "id": "recv", "visible": false } ],
                              [ ".", "net_bytes_sent", ".", ".", ".", ".", ".", ".", ".", ".", { "period": 10, "id": "sent", "visible": false, "stat": "Sum" } ]
                          ],
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Coordinator network",
                          "region": "${AWS::Region}",
                          "period": 300,
                          "yAxis": {
                            "left": {
                              "label": "Bytes/s"
                            }
                          }
                      }
                  },
                  {
                      "type": "metric",
                      "x": 18,
                      "y": 6,
                      "width": 6,
                      "height": 6,
                      "properties": {
                          "metrics": [
                              [ { "expression": "read/PERIOD(read)", "label": "read", "id": "e1", "period": 10 } ],
                              [ { "expression": "write/PERIOD(write)", "label": "written", "id": "e2", "period": 10 } ],
                              [ "Presto", "diskio_read_bytes", "PrestoStackName", "${AWS::StackName}", "Type", "Node", "Category", "diskio", "PrestoNodeRole", "coordinator", { "period": 10, "id": "read", "visible": false, "stat": "Sum" } ],
                              [ ".", "diskio_write_bytes", ".", ".", ".", ".", ".", ".", ".", ".", { "period": 10, "id": "write", "visible": false, "stat": "Sum" } ]
                          ],
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Coordinator disk IO",
                          "region": "${AWS::Region}",
                          "period": 300,
                          "yAxis": {
                            "left": {
                              "label": "Bytes/s"
                            }
                          }
                      }
                  },
                  {
                      "type": "metric",
                      "x": 12,
                      "y": 12,
                      "width": 6,
                      "height": 6,
                      "properties": {
                          "metrics": [
                              [ { "expression": "RATE(young / 1000) * 100", "label": "young gen", "id": "e1", "period": 10, "color": "#2ca02c" } ],
                              [ { "expression": "RATE(old / 1000) * 100", "label": "old gen", "id": "e2", "period": 10, "color": "#d62728" } ],
                              [ "Presto", "gc_young_CollectionTime", "PrestoStackName", "${AWS::StackName}", "Type", "Presto", "Category", "memory", "PrestoNodeRole", "coordinator", { "period": 10, "id": "young", "visible": false, "stat": "Maximum" } ],
                              [ ".", "gc_old_CollectionTime", ".", ".", ".", ".", ".", ".", ".", ".", { "period": 10, "id": "old", "visible": false, "stat": "Maximum" } ]
                          ],
                          "view": "timeSeries",
                          "stacked": false,
                          "region": "${AWS::Region}",
                          "yAxis": {
                              "left": {
                                  "showUnits": false,
                                  "label": "Time (%)",
                                  "min": 0
                              }
                          },
                          "title": "Coordinator G1 collection time",
                          "period": 300
                      }
                  },
                  {
                      "type": "metric",
                      "x": 0,
                      "y": 0,
                      "width": 18,
                      "height": 6,
                      "properties": {
                          "metrics": [
                              [ "Presto", "RunningQueries", "PrestoStackName", "${AWS::StackName}", "Type", "Presto", "Category", "executor", "PrestoNodeRole", "coordinator", { "period": 10, "label": "running queries" } ],
                              [ ".", "QueuedQueries", ".", ".", ".", ".", ".", ".", ".", ".", { "period": 10, "label": "queued queries" } ]
                          ],
                          "view": "timeSeries",
                          "stacked": false,
                          "region": "${AWS::Region}",
                          "title": "Queries",
                          "period": 300
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 12,
                      "width": 6,
                      "height": 6,
                      "properties": {
                          "metrics": [
                              [ "Presto", "NonHeapMemoryUsage_used", "PrestoStackName", "${AWS::StackName}", "Type", "Presto", "Category", "memory", "PrestoNodeRole", "coordinator", { "label": "used", "color": "#d62728", "period": 10, "id": "m1" } ],
                              [ ".", "NonHeapMemoryUsage_committed", ".", ".", ".", ".", ".", ".", ".", ".", { "period": 10, "label": "allocated" } ]
                          ],
                          "view": "timeSeries",
                          "stacked": false,
                          "region": "${AWS::Region}",
                          "yAxis": {
                              "left": {
                                  "showUnits": false,
                                  "label": "Bytes"
                              }
                          },
                          "title": "Coordinator non-heap memory",
                          "period": 300
                      }
                  },
                  {
                      "type": "metric",
                      "x": 18,
                      "y": 12,
                      "width": 6,
                      "height": 6,
                      "properties": {
                          "metrics": [
                              [ "Presto", "mem_used", "PrestoStackName", "${AWS::StackName}", "Type", "Node", "Category", "memory", "PrestoNodeRole", "coordinator", { "period": 10, "label": "used", "color": "#d62728" } ],
                              [ ".", "mem_cached", ".", ".", ".", ".", ".", ".", ".", ".", { "period": 10, "label": "cached" } ],
                              [ ".", "mem_free", ".", ".", ".", ".", ".", ".", ".", ".", { "period": 10, "label": "free" } ]
                          ],
                          "view": "timeSeries",
                          "stacked": true,
                          "title": "Coordinator OS memory",
                          "region": "${AWS::Region}",
                          "period": 300
                      }
                  },
                  {
                      "type": "text",
                      "x": 18,
                      "y": 0,
                      "width": 6,
                      "height": 3,
                      "properties": {
                          "markdown": "\n&nbsp;\n\n[button:Starburst cluster overview](${CoordinatorURL}/ui/)\n\n[button:CloudWatch Logs](https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logStream:group=/starburstdata/presto/${AWS::StackName})\n"
                      }
                  },
                  {
                      "type": "metric",
                      "x": 0,
                      "y": 18,
                      "width": 9,
                      "height": 6,
                      "properties": {
                          "metrics": [
                              [ { "expression": "softirq/PERIOD(softirq)*10", "period": 10, "label": "softirq", "id": "e3", "color": "#9467bd" } ],
                              [ { "expression": "iowait/PERIOD(iowait)*10", "period": 10, "label": "iowait", "id": "e1" } ],
                              [ { "expression": "system/PERIOD(system)*10", "period": 10, "label": "system", "id": "e2", "color": "#d62728" } ],
                              [ { "expression": "user/PERIOD(user)*10", "period": 10, "label": "user", "id": "e5", "color": "#2ca02c" } ],
                              [ { "expression": "idle/PERIOD(idle)*10", "period": 10, "label": "idle", "id": "e4", "color": "#1f77b4" } ],
                              [ "Presto", "cpu_usage_iowait", "PrestoStackName", "${AWS::StackName}", "Type", "Node", "Category", "cpu", "PrestoNodeRole", "worker", { "period": 10, "stat": "Sum", "id": "iowait", "visible": false } ],
                              [ ".", "cpu_usage_system", ".", ".", ".", ".", ".", ".", ".", ".", { "period": 10, "stat": "Sum", "id": "system", "visible": false } ],
                              [ ".", "cpu_usage_softirq", ".", ".", ".", ".", ".", ".", ".", ".", { "period": 10, "stat": "Sum", "id": "softirq", "visible": false } ],
                              [ ".", "cpu_usage_idle", ".", ".", ".", ".", ".", ".", ".", ".", { "period": 10, "stat": "Sum", "id": "idle", "visible": false } ],
                              [ ".", "cpu_usage_user", ".", ".", ".", ".", ".", ".", ".", ".", { "period": 10, "stat": "Sum", "id": "user", "visible": false } ]
                          ],
                          "view": "timeSeries",
                          "stacked": true,
                          "region": "${AWS::Region}",
                          "period": 300,
                          "title": "Workers CPU",
                          "yAxis": {
                              "left": {
                                  "showUnits": false,
                                  "label": "Percent"
                              }
                          }
                      }
                  },
                  {
                      "type": "metric",
                      "x": 9,
                      "y": 18,
                      "width": 9,
                      "height": 6,
                      "properties": {
                          "metrics": [
                              [ { "expression": "recv/PERIOD(recv)", "label": "received", "id": "e1", "period": 10 } ],
                              [ { "expression": "sent/PERIOD(sent)", "label": "sent", "id": "e2", "period": 10 } ],
                              [ "Presto", "net_bytes_sent", "PrestoStackName", "${AWS::StackName}", "Type", "Node", "Category", "net", "PrestoNodeRole", "worker", { "id": "sent", "period": 10, "visible": false, "stat": "Sum" } ],
                              [ ".", "net_bytes_recv", ".", ".", ".", ".", ".", ".", ".", ".", { "id": "recv", "period": 10, "visible": false, "stat": "Sum" } ]
                          ],
                          "view": "timeSeries",
                          "stacked": false,
                          "region": "${AWS::Region}",
                          "period": 300,
                          "title": "Workers network",
                          "yAxis": {
                              "left": {
                                  "showUnits": false,
                                  "label": "Bytes/s"
                              }
                          }
                      }
                  },
                  {
                      "type": "metric",
                      "x": 18,
                      "y": 18,
                      "width": 6,
                      "height": 6,
                      "properties": {
                          "metrics": [
                              [ { "expression": "read/PERIOD(read)", "label": "read", "id": "e1", "period": 10 } ],
                              [ { "expression": "write/PERIOD(write)", "label": "written", "id": "e2", "period": 10 } ],
                              [ "Presto", "diskio_write_bytes", "PrestoStackName", "${AWS::StackName}", "Type", "Node", "Category", "diskio", "PrestoNodeRole", "worker", { "period": 10, "id": "write", "visible": false, "stat": "Sum" } ],
                              [ ".", "diskio_read_bytes", ".", ".", ".", ".", ".", ".", ".", ".", { "period": 10, "id": "read", "visible": false, "stat": "Sum" } ]
                          ],
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Workers disk IO",
                          "region": "${AWS::Region}",
                          "period": 300,
                          "yAxis": {
                              "left": {
                                  "showUnits": false,
                                  "label": "Bytes/s"
                              }
                          }
                      }
                  },
                  {
                      "type": "metric",
                      "x": 0,
                      "y": 24,
                      "width": 6,
                      "height": 6,
                      "properties": {
                          "metrics": [
                              [ { "expression": "used/PERIOD(used)*10", "label": "used", "id": "e1", "period": 10, "color": "#d62728" } ],
                              [ { "expression": "committed/PERIOD(committed)*10", "label": "allocated", "id": "e2", "period": 10 } ],
                              [ { "expression": "max/PERIOD(max)*10", "label": "max", "id": "e3", "period": 10 } ],
                              [ "Presto", "HeapMemoryUsage_used", "PrestoStackName", "${AWS::StackName}", "Type", "Presto", "Category", "memory", "PrestoNodeRole", "worker", { "period": 10, "id": "used", "visible": false, "stat": "Sum" } ],
                              [ ".", "HeapMemoryUsage_committed", ".", ".", ".", ".", ".", ".", ".", ".", { "period": 10, "id": "committed", "visible": false, "stat": "Sum" } ],
                              [ ".", "HeapMemoryUsage_max", ".", ".", ".", ".", ".", ".", ".", ".", { "period": 10, "id": "max", "visible": false, "stat": "Sum" } ]
                          ],
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Workers heap memory",
                          "region": "${AWS::Region}",
                          "period": 300,
                          "yAxis": {
                              "left": {
                                  "showUnits": false,
                                  "label": "Bytes"
                              }
                          }
                      }
                  },
                  {
                      "type": "metric",
                      "x": 6,
                      "y": 24,
                      "width": 6,
                      "height": 6,
                      "properties": {
                          "metrics": [
                              [ { "expression": "used/PERIOD(used)*10", "label": "used", "id": "e1", "period": 10, "color": "#d62728" } ],
                              [ { "expression": "committed/PERIOD(committed)*10", "label": "allocated", "id": "e2", "period": 10 } ],
                              [ "Presto", "NonHeapMemoryUsage_used", "PrestoStackName", "${AWS::StackName}", "Type", "Presto", "Category", "memory", "PrestoNodeRole", "worker", { "stat": "Sum", "period": 10, "id": "used", "visible": false } ],
                              [ ".", "NonHeapMemoryUsage_committed", ".", ".", ".", ".", ".", ".", ".", ".", { "stat": "Sum", "period": 10, "id": "committed", "visible": false } ]
                          ],
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Workers non-heap memory",
                          "region": "${AWS::Region}",
                          "yAxis": {
                              "left": {
                                  "showUnits": false,
                                  "label": "Bytes"
                              }
                          },
                          "period": 300
                      }
                  },
                  {
                      "type": "metric",
                      "x": 12,
                      "y": 24,
                      "width": 6,
                      "height": 6,
                      "properties": {
                          "metrics": [
                              [ { "expression": "RATE(young / 1000) * 100", "label": "young gen", "id": "e1", "period": 10, "color": "#2ca02c" } ],
                              [ { "expression": "RATE(old / 1000) * 100", "label": "old gen", "id": "e2", "period": 10, "color": "#d62728" } ],
                              [ "Presto", "gc_young_CollectionTime", "PrestoStackName", "${AWS::StackName}", "Type", "Presto", "Category", "memory", "PrestoNodeRole", "worker", { "period": 10, "id": "young", "visible": false, "stat": "Maximum" } ],
                              [ ".", "gc_old_CollectionTime", ".", ".", ".", ".", ".", ".", ".", ".", { "period": 10, "id": "old", "visible": false, "stat": "Maximum" } ]
                          ],
                          "view": "timeSeries",
                          "stacked": false,
                          "title": "Workers G1 collection time",
                          "region": "${AWS::Region}",
                          "period": 300,
                          "yAxis": {
                              "left": {
                                  "showUnits": false,
                                  "label": "Time (%)",
                                  "min": 0
                              }
                          }
                      }
                  },
                  {
                      "type": "metric",
                      "x": 18,
                      "y": 24,
                      "width": 6,
                      "height": 6,
                      "properties": {
                          "metrics": [
                              [ { "expression": "used/PERIOD(used)*10", "label": "used", "id": "e1", "period": 10, "color": "#d62728" } ],
                              [ { "expression": "cached/PERIOD(cached)*10", "label": "cached", "id": "e3", "period": 10 } ],
                              [ { "expression": "free/PERIOD(free)*10", "label": "free", "id": "e2", "period": 10 } ],
                              [ "Presto", "mem_used", "PrestoStackName", "${AWS::StackName}", "Type", "Node", "Category", "memory", "PrestoNodeRole", "worker", { "period": 10, "id": "used", "stat": "Sum", "visible": false } ],
                              [ ".", "mem_free", ".", ".", ".", ".", ".", ".", ".", ".", { "period": 10, "id": "free", "stat": "Sum", "visible": false } ],
                              [ ".", "mem_cached", ".", ".", ".", ".", ".", ".", ".", ".", { "period": 10, "id": "cached", "stat": "Sum", "visible": false } ]
                          ],
                          "view": "timeSeries",
                          "stacked": true,
                          "title": "Worker OS memory",
                          "region": "${AWS::Region}",
                          "period": 300,
                          "yAxis": {
                              "left": {
                                  "showUnits": false,
                                  "label": "Bytes"
                              }
                          }
                      }
                  },
                  {
                      "type": "metric",
                      "x": 18,
                      "y": 3,
                      "width": 6,
                      "height": 3,
                      "properties": {
                          "title": "HA heartbeat monitor",
                          "annotations": {
                              "alarms": [
                                  "${CooordinatorDownAlarm.Arn}"
                              ]
                          },
                          "view": "timeSeries",
                          "stacked": true
                      }
                  }
              ]
          }
        - CoordinatorURL: !Sub "http://${CoordinatorENI.PrimaryPrivateIpAddress}:${PrestoHttpPort}"
  Superset:
    Type: 'AWS::EC2::Instance'
    #aws-permission @cft ec2:CreateTags
    #aws-permission @cft ec2:RunInstances
    #aws-permission @cft ec2:TerminateInstances
    #aws-permission @cft ec2:DescribeInstances
    Condition: LaunchSuperset
    CreationPolicy:
      ResourceSignal:
        Timeout: PT20M
        Count: 1
    Properties:
      InstanceType: m5.large
      ImageId: !FindInMap
        - RegionMap
        - !Ref 'AWS::Region'
        - id
      KeyName: !Ref KeyName
      #aws-permission @cft iam:GetInstanceProfile
      IamInstanceProfile: !If [CreateIamInstanceProfile, !Ref PrestoClusterInstanceProfile, !Ref IamInstanceProfile]
      SecurityGroupIds: !Split
        - ','
        - !Join
          - ','
          - - !GetAtt PrestoSecurityGroup.GroupId
            - !Join
              - ','
              - !Ref SecurityGroups
      #PlacementGroupName: not set
      SubnetId: !Ref Subnet
      Tags:
        - { Key: Name, Value: !Sub "${AWS::StackName}-Superset" }
        - { Key: "starburstdata:identification:role", Value: "presto:superset" }
      UserData: !Base64
        "Fn::Sub":
          - |-
            {
              "cft_configure": {
                "coordinator": false
                , "worker": false
                , "start_presto": false
                , "coordinator_address": "${CoordinatorENI.PrimaryPrivateIpAddress}"
                , "presto_http_port": ${PrestoHttpPort}
                , "start_superset": true
                , "bootstrap_script_uri": "${BootstrapScriptURI}"
                , "region": "${AWS::Region}"
                , "log_group": "${PrestoLogGroup}"
                , "usage_metrics_log_group": "${UsageMetricsLogGroup}"
                , "cf_stack": "${AWS::StackName}"
                , "cf_resource": "Superset"
                ${PrivateSubnetEndpoints}
                , "force_superset_update_when_coordinator_configuration_is_updated": {
                    "additional_configuration_uri": "${AdditionalCoordinatorConfigurationURI}"
                    ${HiveMetastore}
                }
              }
            }
          - PrestoLogGroup: !Sub "/starburstdata/presto/${AWS::StackName}"
            UsageMetricsLogGroup: !Sub "/starburstdata/usage-metrics/${AWS::StackName}"
            PrivateSubnetEndpoints: !If
            - CreateVPCEndpoints
            - !Sub
              - |-
                , "api_proxy_endpoint_dns_entries": "${APIProxyDnsEntries}"
                , "aws_proxy_api_id": "${AWSProxyRestAPI}"
                , "aws_proxy_deployment": "${AWSProxyDeployment}"
                , "logs_endpoint_dns_entries": "${LogsDnsEntries}"
                , "monitoring_endpoint_dns_entries": "${MonitoringDnsEntries}"
              - APIProxyDnsEntries: !Join [ ',', !GetAtt APIProxyEndpoint.DnsEntries ]
                LogsDnsEntries: !Join [ ',', !GetAtt LogsEndpoint.DnsEntries ]
                MonitoringDnsEntries: !Join [ ',', !GetAtt MonitoringEndpoint.DnsEntries ]
            - ''
            HiveMetastore:  !If
            - LaunchMetastore
            - !Sub |
               , "hive_metastore_uri": "thrift://${Metastore.PrivateIp}:9083"
            - !If
              - UseExternalHiveMetastore
              - !Sub
                - |-
                  , "hive_metastore_uri": "thrift://${ExternalMetastoreHost}:${Port}"
                - Port: !If
                  - ExternalMetastorePortDefined
                  - !Ref ExternalMetastorePort
                  - '9083'
              - !If
                - UseGlueMetastore
                - |-
                  , "hive_use_glue_metastore": true
                - ''

Outputs:
  PrestoCoordinatorURL:
    Value: !Sub "http://${CoordinatorENI.PrimaryPrivateIpAddress}:${PrestoHttpPort}"
    Description: Presto Web UI, Coordinator REST Endpoint
  PrestoSSH:
    Value: !Sub "ec2-user@${CoordinatorENI.PrimaryPrivateIpAddress}"
    Description: SSH Access
  PublicSupersetURL:
    Condition: LaunchSupersetAndSelectedSubnetAutoAssignsPublicIp
    Value: !Sub "http://${Superset.PublicDnsName}:8088"
    Description: Apache Superset app (public address)
  PrivateSupersetURL:
    Condition: LaunchSuperset
    Value: !Sub "http://${Superset.PrivateDnsName}:8088"
    Description: Apache Superset app (private address)
  SupersetAdminPassword:
    Condition: LaunchSuperset
    Value: !Ref Superset # Superset instance id; AMI defaults superset password to this
    Description: "Password for 'admin' user in Apache Superset app"
  PublicRangerUrl:
    Condition: LaunchRangerAndSelectedSubnetAutoAssignsPublicIp
    Value: !Sub "http://${Ranger.PublicDnsName}:6080"
    Description: Apache Ranger app (public address)
  PrivateRangerUrl:
    Condition: LaunchRanger
    Value: !Sub "http://${Ranger.PrivateDnsName}:6080"
    Description: Apache Ranger app (private address)
  CloudWatchLogs:
    Value: !Sub 'https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logStream:group=/starburstdata/presto/${AWS::StackName}'
  UsageMetricsLogs:
    Value: !Sub 'https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logStream:group=/starburstdata/usage-metrics/${AWS::StackName}'
  Dashboard:
    Condition: EnableCloudWatchMetrics
    Value: !Sub 'https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=Starburst-Dashboard-${AWS::StackName}'
